<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OKX.Net</name>
    </assembly>
    <members>
        <member name="T:OKX.Net.Clients.OKXRestClient">
            <inheritdoc />
        </member>
        <member name="P:OKX.Net.Clients.OKXRestClient.UnifiedApi">
            <summary>
            Unified API endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Clients.OKXRestClient.#ctor(System.Action{OKX.Net.Objects.Options.OKXRestOptions})">
            <summary>
            Create a new instance of the OKXRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:OKX.Net.Clients.OKXRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{OKX.Net.Objects.Options.OKXRestOptions})">
            <summary>
            Create a new instance of the OKXRestClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:OKX.Net.Clients.OKXRestClient.SetDefaultOptions(System.Action{OKX.Net.Objects.Options.OKXRestOptions})">
            <summary>
            Sets the default options to use for new clients
            </summary>
            <param name="optionsDelegate">Callback for setting the options</param>
        </member>
        <member name="M:OKX.Net.Clients.OKXRestClient.SetApiCredentials(OKX.Net.Objects.OKXApiCredentials)">
            <summary>
            Sets the API Credentials
            </summary>
            <param name="credentials">API Credentials Object</param>
        </member>
        <member name="T:OKX.Net.Clients.OKXSocketClient">
            <inheritdoc />
        </member>
        <member name="P:OKX.Net.Clients.OKXSocketClient.UnifiedApi">
            <summary>
            Unified API endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Clients.OKXSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the OKXSocketClient
            </summary>
            <param name="loggerFactory">The logger</param>
        </member>
        <member name="M:OKX.Net.Clients.OKXSocketClient.#ctor(System.Action{OKX.Net.Objects.Options.OKXSocketOptions})">
            <summary>
            Create a new instance of the OKXSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:OKX.Net.Clients.OKXSocketClient.#ctor(System.Action{OKX.Net.Objects.Options.OKXSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the OKXSocketClient
            </summary>
            <param name="loggerFactory">The logger</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:OKX.Net.Clients.OKXSocketClient.SetDefaultOptions(System.Action{OKX.Net.Objects.Options.OKXSocketOptions})">
            <summary>
            Set default options
            </summary>
            <param name="optionsDelegate"></param>
        </member>
        <member name="M:OKX.Net.Clients.OKXSocketClient.SetApiCredentials(OKX.Net.Objects.OKXApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApi.WriteParamBody(CryptoExchange.Net.Interfaces.IRequest,System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAccountBalanceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAccountPositionsAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAccountPositionHistoryAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{OKX.Net.Enums.OKXClosingPositionType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAccountPositionRiskAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetBillHistoryAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{OKX.Net.Enums.OKXContractType},System.Nullable{OKX.Net.Enums.OKXAccountBillType},System.Nullable{OKX.Net.Enums.OKXAccountBillSubType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetBillArchiveAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{OKX.Net.Enums.OKXContractType},System.Nullable{OKX.Net.Enums.OKXAccountBillType},System.Nullable{OKX.Net.Enums.OKXAccountBillSubType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAccountConfigurationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SetAccountPositionModeAsync(OKX.Net.Enums.OKXPositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAccountLeverageAsync(System.String,OKX.Net.Enums.OKXMarginMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SetAccountLeverageAsync(System.Int32,OKX.Net.Enums.OKXMarginMode,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetMaximumAmountAsync(System.String,OKX.Net.Enums.OKXTradeMode,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetMaximumAvailableAmountAsync(System.String,OKX.Net.Enums.OKXTradeMode,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SetMarginAmountAsync(System.String,OKX.Net.Enums.OKXPositionSide,OKX.Net.Enums.OKXMarginAddReduce,System.Decimal,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetMaximumLoanAmountAsync(System.String,OKX.Net.Enums.OKXMarginMode,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetFeeRatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXFeeRateCategory},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetInterestAccruedAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetInterestRateAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SetGreeksAsync(OKX.Net.Enums.OKXGreeksType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetMaximumWithdrawalsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetFundingBalanceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.TransferAsync(System.String,System.Decimal,OKX.Net.Enums.OKXTransferType,OKX.Net.Enums.OKXAccount,OKX.Net.Enums.OKXAccount,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetFundingBillDetailsAsync(System.String,System.Nullable{OKX.Net.Enums.OKXFundingBillType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetLightningDepositsAsync(System.String,System.Decimal,System.Nullable{OKX.Net.Enums.OKXLightningDepositAccount},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetDepositAddressAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetDepositHistoryAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXDepositState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXDepositType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.WithdrawAsync(System.String,System.Decimal,OKX.Net.Enums.OKXWithdrawalDestination,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetLightningWithdrawalsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXWithdrawalState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetSavingBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SavingPurchaseRedemptionAsync(System.String,System.Decimal,OKX.Net.Enums.OKXSavingActionSide,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.ConvertDustAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SetIsolatedMarginModeAsync(OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXIsolatedMarginMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.GetTransferAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXTransferType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiAccount.SetAccountModeAsync(OKX.Net.Enums.OKXAccountLevel,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetTickersAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetIndexTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetKlinesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetKlineHistoryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetIndexKlinesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetMarkPriceKlinesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRecentTradesAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetTradeHistoryAsync(System.String,OKX.Net.Enums.OKXTradeHistoryPaginationType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.Get24HourVolumeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetOracleAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetIndexComponentsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetBlockTickersAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetBlockTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetBlockTradesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetSymbolsAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetDeliveryExerciseHistoryAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetOpenInterestsAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetFundingRatesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetFundingRateHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetLimitPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetOptionMarketDataAsync(System.String,System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetEstimatedPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetDiscountInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetMarkPricesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetPositionTiersAsync(OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXMarginMode,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetInterestRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetVIPInterestRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetUnderlyingAsync(OKX.Net.Enums.OKXInstrumentType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetInsuranceFundAsync(OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXInsuranceType,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.UnitConvertAsync(OKX.Net.Enums.OKXConvertType,System.String,System.Decimal,System.Nullable{OKX.Net.Enums.OKXConvertUnit},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikSupportCoinAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikTakerVolumeAsync(System.String,OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikMarginLendingRatioAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikLongShortRatioAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikContractSummaryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikOptionsSummaryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikPutCallRatioAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikInterestVolumeExpiryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikInterestVolumeStrikeAsync(System.String,System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiExchangeData.GetRubikTakerFlowAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiSubAccounts.GetSubAccountsAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiSubAccounts.ResetSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiSubAccounts.GetSubAccountTradingBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiSubAccounts.GetSubAccountFundingBalancesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiSubAccounts.GetSubAccountBillsAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXSubAccountTransferType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiSubAccounts.TransferBetweenSubAccountsAsync(System.String,System.Decimal,OKX.Net.Enums.OKXAccount,OKX.Net.Enums.OKXAccount,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.PlaceOrderAsync(System.String,OKX.Net.Enums.OKXOrderSide,OKX.Net.Enums.OKXOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Nullable{OKX.Net.Enums.OKXTradeMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OKXQuickMarginType},System.Nullable{System.Int32},System.Nullable{OKX.Net.Enums.OKXSelfTradePreventionMode},System.String,System.Nullable{OKX.Net.Enums.OKXQuantityAsset},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderPlaceRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.CancelMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderCancelRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.AmendOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.AmendMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderAmendRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.ClosePositionAsync(System.String,OKX.Net.Enums.OKXMarginMode,System.Nullable{OKX.Net.Enums.OKXPositionSide},System.String,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetOrderDetailsAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetOrdersAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.String,System.Nullable{OKX.Net.Enums.OKXOrderType},System.Nullable{OKX.Net.Enums.OKXOrderState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetOrderHistoryAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXOrderType},System.Nullable{OKX.Net.Enums.OKXOrderState},System.Nullable{OKX.Net.Enums.OKXOrderCategory},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetOrderArchiveAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXOrderType},System.Nullable{OKX.Net.Enums.OKXOrderState},System.Nullable{OKX.Net.Enums.OKXOrderCategory},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetUserTradesAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetUserTradesArchiveAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.PlaceAlgoOrderAsync(System.String,OKX.Net.Enums.OKXTradeMode,OKX.Net.Enums.OKXOrderSide,OKX.Net.Enums.OKXAlgoOrderType,System.Decimal,System.String,System.Nullable{System.Boolean},System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Nullable{OKX.Net.Enums.OKXQuantityAsset},System.Nullable{OKX.Net.Enums.OKXAlgoPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXAlgoPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXPriceVariance},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{OKX.Net.Enums.OKXQuickMarginType},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.CancelAlgoOrderAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXAlgoOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.CancelAdvanceAlgoOrderAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXAlgoOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetAlgoOrderListAsync(OKX.Net.Enums.OKXAlgoOrderType,System.String,System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetAlgoOrderHistoryAsync(OKX.Net.Enums.OKXAlgoOrderType,System.Nullable{OKX.Net.Enums.OKXAlgoOrderState},System.String,System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.GetAlgoOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXRestClientUnifiedApiTrading.AmendAlgoOrderAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi">
            <inheritdoc />
        </member>
        <member name="P:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.Account">
            <inheritdoc />
        </member>
        <member name="P:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.GetListenerIdentifier(CryptoExchange.Net.Sockets.MessageParsing.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.GetAuthenticationRequest">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.GetConnectionUrlAsync(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApi.PreprocessStreamMessage(System.Net.WebSockets.WebSocketMessageType,System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiAccount">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiAccount.SubscribeToAccountUpdatesAsync(System.String,System.Boolean,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Account.OKXAccountBalance}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiAccount.SubscribeToBalanceAndPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiAccount.SubscribeToDepositUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Funding.OKXDepositHistory}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiAccount.SubscribeToWithdrawalUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Funding.OKXWithdrawalHistory}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToSymbolUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{OKX.Net.Objects.Public.OKXInstrument}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToOpenInterestUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXOpenInterest}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXCandlestick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToEstimatedPriceUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXEstimatedPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToMarkPriceUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToMarkPriceKlineUpdatesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXCandlestick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToPriceLimitUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXLimitPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.String,OKX.Net.Enums.OKXOrderBookType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToOptionSummaryUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{OKX.Net.Objects.Public.OKXOptionSummary}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToFundingRateUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXFundingRate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToIndexKlineUpdatesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXCandlestick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToIndexTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXIndexTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiExchangeData.SubscribeToSystemStatusUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.System.OKXStatus}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.PlaceOrderAsync(System.String,OKX.Net.Enums.OKXOrderSide,OKX.Net.Enums.OKXOrderType,OKX.Net.Enums.OKXTradeMode,System.Decimal,System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Nullable{OKX.Net.Enums.OKXQuickMarginType},System.Nullable{System.Int32},System.Nullable{OKX.Net.Enums.OKXSelfTradePreventionMode},System.String,System.Nullable{OKX.Net.Enums.OKXQuantityAsset},System.String,System.Nullable{System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderPlaceRequest})">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.CancelOrderAsync(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.CancelMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderCancelRequest})">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.AmendOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.AmendMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderAmendRequest})">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.SubscribeToPositionUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Boolean,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{OKX.Net.Objects.Account.OKXPosition}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.SubscribeToLiquidationWarningUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Account.OKXPosition}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.SubscribeToOrderUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Trade.OKXOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.SubscribeToAlgoOrderUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Trade.OKXAlgoOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.Clients.UnifiedApi.OKXSocketClientUnifiedApiTrading.SubscribeToAdvanceAlgoOrderUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Trade.OKXAlgoOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.Enums.OKXAccount">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXAccount.Funding">
            <summary>
            Funding account
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXAccount.Trading">
            <summary>
            Trading account
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXAccountRoleType">
            <summary>
            Role type
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXAccountRoleType.GeneralUser">
            <summary>
            Normal user
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXAccountRoleType.LeadingTrader">
            <summary>
            Leading trader
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXAccountRoleType.CopyTrader">
            <summary>
            Copy trader
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXDepositType">
            <summary>
            Deposit type
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXDepositType.InternalTransfer">
            <summary>
            Internal transfer
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXDepositType.NetworkDeposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXIsolatedMarginMode">
            <summary>
            Quick margin type
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXIsolatedMarginMode.Automatic">
            <summary>
            Auto transfers
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXIsolatedMarginMode.Autonomy">
            <summary>
            Manual transfers (only supported in CONTRACTS)
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXIsolatedMarginMode.QuickMargin">
            <summary>
            Quick Margin Mode (only supported in MARGIN)
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXLoanType">
            <summary>
            Loan type
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXLoanType.VIPLoans">
            <summary>
            VIP loans
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXLoanType.MarketLoans">
            <summary>
            Market loans
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXMaintenanceType">
            <summary>
            Type of maintenance
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXMaintenanceType.ScheduledMaintenance">
            <summary>
            Scheduled
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXMaintenanceType.UnscheduledMaintenance">
            <summary>
            Unscheduled
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXMaintenanceType.SystemDisruption">
            <summary>
            Disruption
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXOptionalTradingStatus">
            <summary>
            Status of optional trading
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXOptionalTradingStatus.NotActivated">
            <summary>
            Not activated
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXOptionalTradingStatus.Activated">
            <summary>
            Activated
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXPeriod">
            <summary>
            Period
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.ThreeMinutes">
            <summary>
            3m
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.OneHour">
            <summary>
            1H
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.TwoHours">
            <summary>
            2H
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.FourHours">
            <summary>
            4H
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.SixHours">
            <summary>
            6H
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.TwelveHours">
            <summary>
            12H
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.OneDay">
            <summary>
            1D
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.OneWeek">
            <summary>
            1W
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.OneMonth">
            <summary>
            1M
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.ThreeMonths">
            <summary>
            3M
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.SixMonths">
            <summary>
            6M
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXPeriod.OneYear">
            <summary>
            1Y
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXQuantityAsset">
            <summary>
            Quantity asset
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXQuantityAsset.BaseAsset">
            <summary>
            Quantity in base asset
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXQuantityAsset.QuoteAsset">
            <summary>
            Quantity in quote asset
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXQuickMarginType">
            <summary>
            Quick margin type
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXQuickMarginType.Manual">
            <summary>
            Manual
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXQuickMarginType.AutoBorrow">
            <summary>
            Auto borrow
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXQuickMarginType.AutoRepay">
            <summary>
            Auto repay
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXSelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXSelfTradePreventionMode.CancelMaker">
            <summary>
            Cancel maker
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXSelfTradePreventionMode.CancelTaker">
            <summary>
            Cancel taker
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXSelfTradePreventionMode.CancelBoth">
            <summary>
            Cancel both
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OKXTransferStatus">
            <summary>
            Status of a transfer
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXTransferStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXTransferStatus.Pending">
            <summary>
            Pending transfer
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OKXTransferStatus.Failed">
            <summary>
            Transfer failed
            </summary>
        </member>
        <member name="T:OKX.Net.Enums.OXKTriggerPriceType">
            <summary>
            Trigger price tpye
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OXKTriggerPriceType.Last">
            <summary>
            Last price
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OXKTriggerPriceType.Index">
            <summary>
            Index price
            </summary>
        </member>
        <member name="F:OKX.Net.Enums.OXKTriggerPriceType.Mark">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="T:OKX.Net.ExtensionMethods.OKXExtensionMethods">
            <summary>
            Extension methods specific to using the OKX API
            </summary>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.IOKXRestClient">
            <summary>
            Client for accessing the OKX Rest API. 
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.IOKXRestClient.UnifiedApi">
            <summary>
            Unified API endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.IOKXRestClient.SetApiCredentials(OKX.Net.Objects.OKXApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.IOKXSocketClient">
            <summary>
            Client for accessing the OKX websocket API. 
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.IOKXSocketClient.UnifiedApi">
            <summary>
            Unified API
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.IOKXSocketClient.SetApiCredentials(OKX.Net.Objects.OKXApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApi">
            <summary>
            Unified API endpoints
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApi.SubAccounts">
            <summary>
            Endpoints related to subaccount mangement
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount">
            <summary>
            Unified account endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel withdrawal
            You can cancel normal withdrawal requests, but you cannot cancel withdrawal requests on Lightning.
            Rate Limit: 6 requests per second
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-cancel-withdrawal" /></para>
            </summary>
            <param name="withdrawalId">Withdrawal ID</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAccountBalanceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of assets (with non-zero balance), remaining balance, and available amount in the account.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-balance" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAccountConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve current account configuration.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-account-configuration" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAccountLeverageAsync(System.String,OKX.Net.Enums.OKXMarginMode,System.Threading.CancellationToken)">
            <summary>
            Get Leverage
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-leverage" /></para>
            </summary>
            <param name="symbols">Single symbol or multiple symbols (no more than 20) separated with comma</param>
            <param name="marginMode">Margin Mode</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAccountPositionHistoryAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{OKX.Net.Enums.OKXClosingPositionType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve the updated position data for the last 3 months. Return in reverse chronological order using utime.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-positions-history" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="symbol">Symbol</param>
            <param name="marginMode">Margin mode</param>
            <param name="type">The type of closing position. It is the latest type if there are several types for the same position.</param>
            <param name="positionId">Position ID</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100. The default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAccountPositionRiskAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.Threading.CancellationToken)">
            <summary>
            Get account and position risk
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-account-and-position-risk" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAccountPositionsAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information on your positions. When the account is in net mode, net positions will be displayed, and when the account is in long/short mode, long or short positions will be displayed.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-positions" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="positionId">Position ID</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetBillArchiveAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{OKX.Net.Enums.OKXContractType},System.Nullable{OKX.Net.Enums.OKXAccountBillType},System.Nullable{OKX.Net.Enums.OKXAccountBillSubType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the account’s bills. The bill refers to all transaction records that result in changing the balance of an account. Pagination is supported, and the response is sorted with most recent first. This endpoint can retrieve data from the last 3 months.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-bills-details-last-3-months" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="asset">Asset</param>
            <param name="marginMode">Margin Mode</param>
            <param name="contractType">Contract Type</param>
            <param name="billType">Bill Type</param>
            <param name="billSubType">Bill Sub Type</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="fromId">Pagination of data to return records earlier than the requested id</param>
            <param name="toId">Pagination of data to return records newer than the requested id</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetBillHistoryAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{OKX.Net.Enums.OKXContractType},System.Nullable{OKX.Net.Enums.OKXAccountBillType},System.Nullable{OKX.Net.Enums.OKXAccountBillSubType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the bills of the account. The bill refers to all transaction records that result in changing the balance of an account. Pagination is supported, and the response is sorted with the most recent first. This endpoint can retrieve data from the last 7 days.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-bills-details-last-7-days" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="asset">Asset</param>
            <param name="marginMode">Margin Mode</param>
            <param name="contractType">Contract Type</param>
            <param name="billType">Bill Type</param>
            <param name="billSubType">Bill Sub Type</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="fromId">Pagination of data to return records earlier than the requested id</param>
            <param name="toId">Pagination of data to return records newer than the requested id</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of all currencies. Not all currencies can be traded. Currencies that have not been defined in ISO 4217 may use a custom symbol.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-get-currencies" /></para>
            </summary>
            <param name="asset">Single asset or multiple assets (no more than 20) separated with comma</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetDepositAddressAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the deposit addresses of currencies, including previously-used addresses.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-get-deposit-address" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetDepositHistoryAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXDepositState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXDepositType},System.Threading.CancellationToken)">
            <summary>
            Retrieve the deposit history of all assets, up to 100 recent records in a year.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-get-deposit-history" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="transactionId">Transaction ID</param>
            <param name="state">State</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="depositId">Deposit ID</param>
            <param name="fromWithdrawalId">Internal transfer initiator's withdrawal ID</param>
            <param name="type">Deposit Type</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetFeeRatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXFeeRateCategory},System.String,System.Threading.CancellationToken)">
            <summary>
            Get Fee Rates
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-fee-rates" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="underlying">Underlying</param>
            <param name="category">Category</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetFundingBalanceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the balances of all the assets, and the amount that is available or on hold.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-get-balance" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetFundingBillDetailsAsync(System.String,System.Nullable{OKX.Net.Enums.OKXFundingBillType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Query the billing record, you can get the latest 1 month historical data
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-asset-bills-details" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="type">Bill type</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="clientId">Client id</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetInterestAccruedAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXMarginMode},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get interest-accrued
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-interest-accrued-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="asset">Asset</param>
            <param name="marginMode">Margin Mode</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetInterestRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the user's current leveraged currency borrowing interest rate
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-interest-rate" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetLightningDepositsAsync(System.String,System.Decimal,System.Nullable{OKX.Net.Enums.OKXLightningDepositAccount},System.Threading.CancellationToken)">
            <summary>
            Users can create up to 10,000 different invoices within 24 hours.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-lightning-deposits" /></para>
            </summary>
            <param name="currency">Currency</param>
            <param name="amount">deposit amount between 0.000001 - 0.1</param>
            <param name="account">Receiving account</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetLightningWithdrawalsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            The maximum withdrawal amount is 0.1 BTC per request, and 1 BTC in 24 hours. The minimum withdrawal amount is approximately 0.000001 BTC. Sub-account does not support withdrawal.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-lightning-withdrawals" /></para>
            </summary>
            <param name="asset">Asset. Currently only BTC is supported.</param>
            <param name="invoice">Invoice text</param>
            <param name="memo">Lightning withdrawal memo</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetMaximumAmountAsync(System.String,OKX.Net.Enums.OKXTradeMode,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get maximum buy/sell amount or open amount
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-maximum-buy-sell-amount-or-open-amount" /></para>
            </summary>
            <param name="symbol">SymbolD</param>
            <param name="tradeMode">Trade Mode</param>
            <param name="asset">Asset</param>
            <param name="price">Price</param>
            <param name="leverage">Leverage</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetMaximumAvailableAmountAsync(System.String,OKX.Net.Enums.OKXTradeMode,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get Maximum Available Tradable Amount
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-maximum-available-tradable-amount" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="tradeMode">Trade Mode</param>
            <param name="asset">Currency</param>
            <param name="reduceOnly">Reduce Only</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetMaximumLoanAmountAsync(System.String,OKX.Net.Enums.OKXMarginMode,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the maximum loan of instrument
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-the-maximum-loan-of-instrument" /></para>
            </summary>
            <param name="instrumentId">Instrument ID</param>
            <param name="marginMode">Margin Mode</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetMaximumWithdrawalsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the maximum transferable amount.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-get-maximum-withdrawals" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetSavingBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get saving balance
            Only the assets in the funding account can be used for saving.
            Rate Limit: 6 requests per second
            <para><a href="https://www.okx.com/docs-v5/en/#financial-product-savings-get-saving-balance" /></para>
            </summary>
            <param name="asset">Asset, e.g. BTC</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXWithdrawalState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the withdrawal records according to the currency, withdrawal status, and time range in reverse chronological order. The 100 most recent records are returned by default.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-get-withdrawal-history" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="transactionId">Transaction ID</param>
            <param name="state">State</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="withdrawalId">Client-supplied ID</param>
            <param name="clientId">Client id</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SavingPurchaseRedemptionAsync(System.String,System.Decimal,OKX.Net.Enums.OKXSavingActionSide,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            
            <para><a href="https://www.okx.com/docs-v5/en/#financial-product-savings-post-savings-purchase-redemption" /></para>
            </summary>
            <param name="asset"></param>
            <param name="amount"></param>
            <param name="side"></param>
            <param name="rate"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SetAccountLeverageAsync(System.Int32,OKX.Net.Enums.OKXMarginMode,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Threading.CancellationToken)">
            <summary>
            The following are the setting leverage cases for an instrument:
            Set leverage for isolated MARGIN at pairs level.
            Set leverage for cross MARGIN in Single-currency margin at pairs level.
            Set leverage for cross MARGIN in Multi-currency margin at currency level.
            Set leverage for cross/isolated FUTURES/SWAP at underlying/contract level.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-set-leverage" /></para>
            </summary>
            <param name="leverage">Leverage</param>
            <param name="asset">Asset</param>
            <param name="symbol">Symbol</param>
            <param name="marginMode">Margin Mode</param>
            <param name="positionSide">Position Side</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SetAccountPositionModeAsync(OKX.Net.Enums.OKXPositionMode,System.Threading.CancellationToken)">
            <summary>
            FUTURES and SWAP support both long/short mode and net mode. In net mode, users can only have positions in one direction; In long/short mode, users can hold positions in long and short directions.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-set-position-mode" /></para>
            </summary>
            <param name="positionMode"></param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SetGreeksAsync(OKX.Net.Enums.OKXGreeksType,System.Threading.CancellationToken)">
            <summary>
            Set the display type of Greeks.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-set-greeks-pa-bs" /></para>
            </summary>
            <param name="greeksType">Display type of Greeks.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SetMarginAmountAsync(System.String,OKX.Net.Enums.OKXPositionSide,OKX.Net.Enums.OKXMarginAddReduce,System.Decimal,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Increase or decrease the margin of the isolated position.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-increase-decrease-margin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="positionSide">Position Side</param>
            <param name="marginAddReduce">Type</param>
            <param name="amount">Amount</param>
            <param name="asset">Asset</param>
            <param name="auto">Automatic loan transfer out</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.TransferAsync(System.String,System.Decimal,OKX.Net.Enums.OKXTransferType,OKX.Net.Enums.OKXAccount,OKX.Net.Enums.OKXAccount,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            This endpoint supports the transfer of funds between your funding account and trading account, and from the master account to sub-accounts. Direct transfers between sub-accounts are not allowed.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-funds-transfer" /></para>
            </summary>
            <param name="asset">Currency</param>
            <param name="amount">Amount</param>
            <param name="type">Transfer type</param>
            <param name="fromAccount">The remitting account</param>
            <param name="toAccount">The beneficiary account</param>
            <param name="subAccountName">Sub Account Name</param>
            <param name="fromSymbol">MARGIN trading pair (e.g. BTC-USDT) or contract underlying (e.g. BTC-USD) to be transferred out.</param>
            <param name="toSymbol">MARGIN trading pair (e.g. BTC-USDT) or contract underlying (e.g. BTC-USD) to be transferred in.</param>
            <param name="loanTransfer">Whether or not borrowed coins can be transferred out under Multi-currency margin and Portfolio margin</param>
            <param name="clientId">Client id</param>
            <param name="ignorePositionRisk">Ignore position risk</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.WithdrawAsync(System.String,System.Decimal,OKX.Net.Enums.OKXWithdrawalDestination,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdrawal of tokens.
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-withdrawal" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="amount">Amount</param>
            <param name="destination">Withdrawal destination address</param>
            <param name="toAddress">Verified digital currency address, email or mobile number. Some digital currency addresses are formatted as 'address+tag', e.g. 'ARDOR-7JF3-8F2E-QUWZ-CAN7F:123456'</param>
            <param name="fee">Transaction fee</param>
            <param name="network">Chain name. There are multiple chains under some currencies, such as USDT has USDT-ERC20, USDT-TRC20, and USDT-Omni. If this parameter is not filled in because it is not available, it will default to the main chain.</param>
            <param name="areaCode">	Area code for the phone number, e.g. 86. If toAddr is a phone number, this parameter is required.</param>
            <param name="clientId">Client-supplied ID</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.ConvertDustAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Convert small assets in funding account to OKB
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-small-assets-convert" /></para>
            </summary>
            <param name="assets">Assets to convert</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SetIsolatedMarginModeAsync(OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXIsolatedMarginMode,System.Threading.CancellationToken)">
            <summary>
            Set isolated margin mode for the Margin or Contracts instrument type
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-isolated-margin-trading-settings" /></para>
            </summary>
            <param name="instumentType">Instrument type, only Margin and Contracts supported</param>
            <param name="isolatedMarginMode">Isolated margin mode</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.GetTransferAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXTransferType},System.Threading.CancellationToken)">
            <summary>
            Get info on a transfer
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-rest-api-get-funds-transfer-state" /></para>
            </summary>
            <param name="transferId">Transfer id, either this or clientTransferId needs to be provided</param>
            <param name="clientTransferId">Client transfer id, either this or transferId needs to be provided</param>
            <param name="type">The type of transfer</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiAccount.SetAccountModeAsync(OKX.Net.Enums.OKXAccountLevel,System.Threading.CancellationToken)">
            <summary>
            Set the account mode
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-rest-api-set-account-mode" /></para>
            </summary>
            <param name="mode">New account mode</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData">
            <summary>
            Unified exchange data endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.Get24HourVolumeAsync(System.Threading.CancellationToken)">
            <summary>
            The 24-hour trading volume is calculated on a rolling basis, using USD as the pricing unit.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-24h-total-volume" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetBlockTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get block ticker
            Retrieve the latest block trading volume in the last 24 hours.
            Rate Limit: 20 requests per 2 seconds
            <para><a href="https://www.okx.com/docs-v5/en/#block-trading-rest-api-get-block-ticker" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetBlockTickersAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get block tickers
            Retrieve the latest block trading volume in the last 24 hours.
            Rate Limit: 20 requests per 2 seconds
            <para><a href="https://www.okx.com/docs-v5/en/#block-trading-rest-api-get-block-tickers" /></para>
            </summary>
            <param name="instrumentType">Type of instrument</param>
            <param name="underlying">Underlying</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetBlockTradesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get block trades
            Retrieve the recent block trading transactions of an instrument. Descending order by tradeId.
            Rate Limit: 20 requests per 2 seconds
            <para><a href="https://www.okx.com/docs-v5/en/#block-trading-rest-api-get-block-trades" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetDeliveryExerciseHistoryAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the estimated delivery price, which will only have a return value one hour before the delivery/exercise.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-delivery-exercise-history" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="underlying">Underlying</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetDiscountInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve discount rate level and interest-free quota.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-discount-rate-and-interest-free-quota" /></para>
            </summary>
            <param name="discountLevel">Discount level</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetEstimatedPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the estimated delivery price which will only have a return value one hour before the delivery/exercise.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-estimated-delivery-exercise-price" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetFundingRateHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve funding rate history. This endpoint can retrieve data from the last 3 months.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-funding-rate-history" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetFundingRatesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve funding rate.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetIndexComponentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the index component information data on the market
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-index-components" /></para>
            </summary>
            <param name="index"></param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetIndexKlinesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve the candlestick charts of the index. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-index-candlesticks" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period">Bar size, the default is 1m</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetIndexTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve index tickers.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-index-tickers" /></para>
            </summary>
            <param name="quoteAsset">Quote asset. Currently there is only an index with USD/USDT/BTC as the quote asset.</param>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetSymbolsAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of instruments with open contracts.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-instruments" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="underlying">Underlying</param>
            <param name="symbol">Symbol</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetInsuranceFundAsync(OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXInsuranceType,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get insurance fund
            Get insurance fund balance information
            Rate Limit: 10 requests per 2 seconds
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-insurance-fund" /></para>
            </summary>
            <param name="instrumentType"></param>
            <param name="type"></param>
            <param name="underlying"></param>
            <param name="asset"></param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit"></param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetInterestRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get margin interest rate
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-interest-rate-and-loan-quota" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetKlineHistoryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve history candlestick charts from recent years.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-candlesticks-history" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period">Bar size, the default is 1m</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetKlinesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve the candlestick charts. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-candlesticks" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period">Bar size, the default is 1m</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 300; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetLimitPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the highest buy limit and lowest sell limit of the instrument.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-limit-price" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetMarkPriceKlinesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve the candlestick charts of mark price. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-mark-price-candlesticks" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period">Bar size, the default is 1m</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetMarkPricesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve mark price.
            We set the mark price based on the SPOT index and at a reasonable basis to prevent individual users from manipulating the market and causing the contract price to fluctuate.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-mark-price" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="underlying">Underlying</param>
            <param name="symbol">Symbol</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetOpenInterestsAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the total open interest for contracts on OKX.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-open-interest" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="underlying">Underlying</param>
            <param name="symbol">Symbol</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetOptionMarketDataAsync(System.String,System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve option market data.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-option-market-data" /></para>
            </summary>
            <param name="underlying">Underlying</param>
            <param name="expiryDate">Contract expiry date</param>
            <param name="instrumentFamily">Instrument type</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetOracleAsync(System.Threading.CancellationToken)">
            <summary>
            Get the crypto price of signing using Open Oracle smart contract.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-oracle" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve a symbol order book.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-order-book" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="depth">Order book depth per side. Maximum 400, e.g. 400 bids + 400 asks. Default returns to 1 depth data</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetPositionTiersAsync(OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXMarginMode,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Position information，Maximum leverage depends on your borrowings and margin ratio.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-position-tiers" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="marginMode">Margin Mode</param>
            <param name="underlying">Underlying</param>
            <param name="symbol">Symbol</param>
            <param name="tier">Tiers</param>
            <param name="asset">Margin currency</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRecentTradesAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve the recent transactions of an instrument.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-trades" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikContractSummaryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Open interest is the sum of all long and short futures and perpetual swap positions.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-contracts-open-interest-and-volume" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="period">period, the default is 5m, e.g. [5m/1H/1D]</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikInterestVolumeExpiryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <summary>
            This shows the volume and open interest for each upcoming expiration. You can use this to see which expirations are currently the most popular to trade.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-open-interest-and-volume-expiry" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="period">period, the default is 8H. e.g. [8H/1D]</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikInterestVolumeStrikeAsync(System.String,System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <summary>
            This shows what option strikes are the most popular for each expiration.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-open-interest-and-volume-strike" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="expiryTime">expiry time (Format: YYYYMMdd, for example: "20210623")</param>
            <param name="period">period, the default is 8H. e.g. [8H/1D]</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikLongShortRatioAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            This is the ratio of users with net long vs short positions. It includes data from futures and perpetual swaps.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-long-short-ratio" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="period">period, the default is 5m, e.g. [5m/1H/1D]</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikMarginLendingRatioAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            This indicator shows the ratio of cumulative data value between currency pair leverage quote currency and underlying asset over a given period of time.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-margin-lending-ratio" /></para>
            </summary>
            <param name="asset">Currency</param>
            <param name="period">period, the default is 5m, e.g. [5m/1H/1D]</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikOptionsSummaryAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <summary>
            This shows the sum of all open positions and how much total trading volume has taken place.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-options-open-interest-and-volume" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="period">period, the default is 8H. e.g. [8H/1D]</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikPutCallRatioAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <summary>
            This shows the relative buy/sell volume for calls and puts. It shows whether traders are bullish or bearish on price and volatility.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-put-call-ratio" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="period">period, the default is 8H. e.g. [8H/1D]</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikSupportCoinAsync(System.Threading.CancellationToken)">
            <summary>
            Get the currency supported by the transaction big data interface
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-support-coin" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikTakerFlowAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Threading.CancellationToken)">
            <summary>
            This shows the relative buy/sell volume for calls and puts. It shows whether traders are bullish or bearish on price and volatility.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-taker-flow" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="period">period, the default is 8H. e.g. [8H/1D]</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetRubikTakerVolumeAsync(System.String,OKX.Net.Enums.OKXInstrumentType,OKX.Net.Enums.OKXPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            This is the taker volume for both buyers and sellers. This shows the influx and exit of funds in and out of {coin}.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-statistics-rest-api-get-taker-volume" /></para>
            </summary>
            <param name="asset">Currency</param>
            <param name="instrumentType">Instrument Type</param>
            <param name="period">period, the default is 5m, e.g. [5m/1H/1D]</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve API server time.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-system-time" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the latest price snapshot, best bid/ask price, and trading volume in the last 24 hours.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-ticker" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetTickersAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the latest price snapshot, best bid/ask price, and trading volume in the last 24 hours.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-tickers" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="underlying">Underlying</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetTradeHistoryAsync(System.String,OKX.Net.Enums.OKXTradeHistoryPaginationType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get trades history
            Retrieve the recent transactions of an instrument from the last 3 months with pagination.
            Rate Limit: 10 requests per 2 seconds
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-get-trades-history" /></para>
            </summary>
            <param name="symbol">Symbol, e.g. BTC-USDT</param>
            <param name="type">Pagination Type</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetUnderlyingAsync(OKX.Net.Enums.OKXInstrumentType,System.Threading.CancellationToken)">
            <summary>
            Get Underlying
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-underlying" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.GetVIPInterestRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get interest rate and loan quota for VIP loans
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-get-interest-rate-and-loan-quota" /></para>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiExchangeData.UnitConvertAsync(OKX.Net.Enums.OKXConvertType,System.String,System.Decimal,System.Nullable{OKX.Net.Enums.OKXConvertUnit},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Convert units
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-rest-api-unit-convert" /></para>
            </summary>
            <param name="type">Convert type</param>
            <param name="unit">The unit of currency</param>
            <param name="symbol">Symbol</param>
            <param name="price">Order price</param>
            <param name="quantity">Quantity to buy or sell</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts">
            <summary>
            Unified API subaccount endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts.GetSubAccountBillsAsync(System.String,System.String,System.Nullable{OKX.Net.Enums.OKXSubAccountTransferType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            applies to master accounts only
            <para><a href="https://www.okx.com/docs-v5/en/#sub-account-rest-api-get-history-of-sub-account-transfer" /></para>
            </summary>
            <param name="subAccountName">Sub Account Name</param>
            <param name="asset">Asset</param>
            <param name="type">0: Transfers from master account to sub-account ;1 : Transfers from sub-account to master account.</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts.GetSubAccountFundingBalancesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get sub-account funding balance
            Query detailed balance info of Funding Account of a sub-account via the master account (applies to master accounts only)
            <para><a href="https://www.okx.com/docs-v5/en/#sub-account-rest-api-get-sub-account-funding-balance" /></para>
            </summary>
            <param name="subAccountName">Sub Account Name</param>
            <param name="asset">Single asset or multiple assets (no more than 20) separated with comma, e.g. BTC or BTC,ETH.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts.GetSubAccountsAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            applies to master accounts only
            <para><a href="https://www.okx.com/docs-v5/en/#sub-account-rest-api-get-sub-account-list" /></para>
            </summary>
            <param name="enable">Sub-account status，true: Normal ; false: Frozen</param>
            <param name="subAccountName">Sub Account Name</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts.GetSubAccountTradingBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Query detailed balance info of Trading Account of a sub-account via the master account (applies to master accounts only)
            <para><a href="https://www.okx.com/docs-v5/en/#sub-account-rest-api-get-sub-account-trading-balance" /></para>
            </summary>
            <param name="subAccountName">Sub Account Name</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts.ResetSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <summary>
            applies to master accounts only
            <para><a href="https://www.okx.com/docs-v5/en/#sub-account-rest-api-reset-the-api-key-of-a-sub-account" /></para>
            </summary>
            <param name="readPermission">Read permission</param>
            <param name="subAccountName">Sub Account Name</param>
            <param name="apiKey">APIKey note</param>
            <param name="apiLabel">APIKey note</param>
            <param name="tradePermission">Trade permission</param>
            <param name="ipAddresses">Link IP addresses, separate with commas if more than one. Support up to 20 IP addresses.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiSubAccounts.TransferBetweenSubAccountsAsync(System.String,System.Decimal,OKX.Net.Enums.OKXAccount,OKX.Net.Enums.OKXAccount,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            applies to master accounts only
            <para><a href="https://www.okx.com/docs-v5/en/#sub-account-rest-api-master-accounts-manage-the-transfers-between-sub-accounts" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="amount">Amount</param>
            <param name="fromAccount">6:Funding Account 18:Unified Account</param>
            <param name="toAccount">6:Funding Account 18:Unified Account</param>
            <param name="fromSubAccountName">Sub-account name of the account that transfers funds out.</param>
            <param name="toSubAccountName">Sub-account name of the account that transfers funds in.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading">
            <summary>
            Unified API trading endpoints
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.AmendMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderAmendRequest},System.Threading.CancellationToken)">
            <summary>
            Amend incomplete orders in batches. Maximum 20 orders can be amended at a time. Request parameters should be passed in the form of an array.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-amend-multiple-orders" /></para>
            </summary>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.AmendOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Threading.CancellationToken)">
            <summary>
            Amend an incomplete order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-amend-order" /></para>
            </summary>
            <param name="symbol">Instrument ID</param>
            <param name="orderId">Order ID</param>
            <param name="clientOrderId">Client Order ID</param>
            <param name="requestId">Request ID</param>
            <param name="cancelOnFail">Cancel On Fail</param>
            <param name="newQuantity">New Quantity</param>
            <param name="newPrice">New Price</param>
            <param name="newTriggerPrice">New trigger price</param>
            <param name="newTakeProfitTriggerPrice">New take profit trigger price</param>
            <param name="newStopLossTriggerPrice">New stop loss trigger price</param>
            <param name="newTakeProfitOrderPrice">New take profit order price</param>
            <param name="newStopLossOrderPrice">New stop loss order price</param>
            <param name="newTakeProfitPriceTriggerType">New take profit price trigger type</param>
            <param name="newStopLossPriceTriggerType">New stop loss price trigger type</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.CancelAdvanceAlgoOrderAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXAlgoOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel unfilled algo orders(iceberg order and twap order). A maximum of 10 orders can be canceled at a time. Request parameters should be passed in the form of an array.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-post-cancel-advance-algo-order" /></para>
            </summary>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.CancelAlgoOrderAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXAlgoOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel unfilled algo orders(trigger order, oco order, conditional order). A maximum of 10 orders can be canceled at a time. Request parameters should be passed in the form of an array.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-post-cancel-algo-order" /></para>
            </summary>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.CancelMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderCancelRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel incomplete orders in batches. Maximum 20 orders can be canceled at a time. Request parameters should be passed in the form of an array.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-cancel-multiple-orders" /></para>
            </summary>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an incomplete order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-cancel-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="orderId">Order ID</param>
            <param name="clientOrderId">Client Order ID</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.ClosePositionAsync(System.String,OKX.Net.Enums.OKXMarginMode,System.Nullable{OKX.Net.Enums.OKXPositionSide},System.String,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <summary>
            Close all positions of an instrument via a market order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-close-positions" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginMode">Margin Mode</param>
            <param name="positionSide">Position Side</param>
            <param name="asset">Asset</param>
            <param name="autoCancel">Whether any pending orders for closing out needs to be automatically canceled when close position via a market order.</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetAlgoOrderHistoryAsync(OKX.Net.Enums.OKXAlgoOrderType,System.Nullable{OKX.Net.Enums.OKXAlgoOrderState},System.String,System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of untriggered Algo orders under the current account.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-get-algo-order-history" /></para>
            </summary>
            <param name="algoOrderType">Algo Order Type</param>
            <param name="algoOrderState">Algo Order State</param>
            <param name="algoId">Algo ID</param>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetAlgoOrderListAsync(OKX.Net.Enums.OKXAlgoOrderType,System.String,System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of untriggered Algo orders under the current account.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-get-algo-order-list" /></para>
            </summary>
            <param name="algoOrderType">Algo Order Type</param>
            <param name="algoId">Algo ID</param>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetOrderArchiveAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXOrderType},System.Nullable{OKX.Net.Enums.OKXOrderState},System.Nullable{OKX.Net.Enums.OKXOrderCategory},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the completed order data of the last 3 months, and the incomplete orders that have been canceled are only reserved for 2 hours.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-get-order-history-last-3-months" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="underlying">Underlying</param>
            <param name="orderType">Order Type</param>
            <param name="state">State</param>
            <param name="category">Category</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="fromId">Pagination of data to return records earlier than the requested ordId</param>
            <param name="toId">Pagination of data to return records newer than the requested ordId</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetOrderDetailsAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve order details.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-get-order-details" /></para>
            </summary>
            <param name="symbol">Instrument ID</param>
            <param name="orderId">Order ID</param>
            <param name="clientOrderId">Client Order ID</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetOrderHistoryAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{OKX.Net.Enums.OKXOrderType},System.Nullable{OKX.Net.Enums.OKXOrderState},System.Nullable{OKX.Net.Enums.OKXOrderCategory},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the completed order data for the last 7 days, and the incomplete orders that have been cancelled are only reserved for 2 hours.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-get-order-history-last-7-days" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Instrument ID</param>
            <param name="underlying">Underlying</param>
            <param name="orderType">Order Type</param>
            <param name="state">State</param>
            <param name="category">Category</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="fromId">Pagination of data to return records earlier than the requested ordId</param>
            <param name="toId">Pagination of data to return records newer than the requested ordId</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetOrdersAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.String,System.Nullable{OKX.Net.Enums.OKXOrderType},System.Nullable{OKX.Net.Enums.OKXOrderState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all incomplete orders under the current account.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-get-order-list" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Instrument ID</param>
            <param name="underlying">Underlying</param>
            <param name="orderType">Order Type</param>
            <param name="state">State</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetUserTradesArchiveAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recently-filled transaction details in the last 3 months.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-get-transaction-details-last-3-months" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="underlying">Underlying</param>
            <param name="orderId">Order ID</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="fromId">Pagination of data to return records earlier than the requested ordId</param>
            <param name="toId">Pagination of data to return records newer than the requested ordId</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetUserTradesAsync(System.Nullable{OKX.Net.Enums.OKXInstrumentType},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recently-filled transaction details in the last 3 day.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-get-transaction-details-last-3-days" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="underlying">Underlying</param>
            <param name="orderId">Order ID</param>
            <param name="startTime">Pagination of data to return records earlier than the requested ts</param>
            <param name="endTime">Pagination of data to return records newer than the requested ts</param>
            <param name="limit">Number of results per request. The maximum is 100; the default is 100.</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="fromId">Pagination of data to return records earlier than the requested ordId</param>
            <param name="toId">Pagination of data to return records newer than the requested ordId</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.PlaceAlgoOrderAsync(System.String,OKX.Net.Enums.OKXTradeMode,OKX.Net.Enums.OKXOrderSide,OKX.Net.Enums.OKXAlgoOrderType,System.Decimal,System.String,System.Nullable{System.Boolean},System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Nullable{OKX.Net.Enums.OKXQuantityAsset},System.Nullable{OKX.Net.Enums.OKXAlgoPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXAlgoPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXPriceVariance},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{OKX.Net.Enums.OKXQuickMarginType},System.String,System.Threading.CancellationToken)">
            <summary>
            The algo order includes trigger order, oco order, conditional order,iceberg order and twap order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-post-place-algo-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="tradeMode">Trade Mode</param>
            <param name="orderSide">Order Side</param>
            <param name="algoOrderType">Algo Order Type</param>
            <param name="quantity">Quantity</param>
            <param name="asset">Asset</param>
            <param name="reduceOnly">Reduce Only</param>
            <param name="positionSide">Position Side</param>
            <param name="quantityType">Quantity Type</param>
            <param name="tpTriggerPxType">Take-profit trigger price type</param>
            <param name="tpTriggerPrice">Take Profit Trigger Price</param>
            <param name="tpOrderPrice">Take Profit Order Price</param>
            <param name="slTriggerPxType">Stop-loss trigger price. If you fill in this parameter, you should fill in the stop-loss order price.</param>
            <param name="slTriggerPrice">Stop Loss Trigger Price</param>
            <param name="slOrderPrice">Stop Loss Order Price</param>
            <param name="triggerPrice">Trigger Price</param>
            <param name="orderPrice">Order Price</param>
            <param name="pxVar">Price Variance</param>
            <param name="priceRatio">Price Ratio</param>
            <param name="sizeLimit">Size Limit</param>
            <param name="priceLimit">Price Limit</param>
            <param name="callbackRatio">Callback ratio</param>
            <param name="callbackSpread">Callback spread</param>
            <param name="activePx">Active price</param>
            <param name="timeInterval">Time Interval</param>
            <param name="closeFraction">Fraction of position to be closed when the algo order is triggered. Currently the system supports fully closing the position only so the only accepted value is 1.</param>
            <param name="cancelOnClose">Whether the TP/SL order placed by the user is associated with the corresponding position of the instrument. If it is associated, the TP/SL order will be cancelled when the position is fully closed; if it is not, the TP/SL order will not be affected when the position is fully closed.</param>
            <param name="quickMarginType">Quick Margin type. Only applicable to Quick Margin Mode of isolated margin</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderPlaceRequest},System.Threading.CancellationToken)">
            <summary>
            Place orders in batches. Maximum 20 orders can be placed at a time. Request parameters should be passed in the form of an array.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-place-multiple-orders" /></para>
            </summary>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.PlaceOrderAsync(System.String,OKX.Net.Enums.OKXOrderSide,OKX.Net.Enums.OKXOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Nullable{OKX.Net.Enums.OKXTradeMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OKXQuickMarginType},System.Nullable{System.Int32},System.Nullable{OKX.Net.Enums.OKXSelfTradePreventionMode},System.String,System.Nullable{OKX.Net.Enums.OKXQuantityAsset},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-post-place-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="tradeMode">Trade Mode</param>
            <param name="side">Order Side</param>
            <param name="positionSide">Position Side</param>
            <param name="type">Order Type</param>
            <param name="quantity">Quantity</param>
            <param name="price">Price</param>
            <param name="asset">Asset</param>
            <param name="clientOrderId">Client Order ID</param>
            <param name="reduceOnly">Whether to reduce position only or not, true false, the default is false.</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="takeProfitTriggerPriceType">Take profit price type</param>
            <param name="stopLossTriggerPriceType">Stop loss price type</param>
            <param name="quickMarginType">Quick margin type</param>
            <param name="selfTradePreventionId">Self trade prevention id</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="quantityAsset">Asset of the quantity when placing market order</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.GetAlgoOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a specific algo order
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-get-algo-order-details" /></para>
            </summary>
            <param name="algoId">Algo id, this or clientAlgoId should be provided</param>
            <param name="clientAlgoId">Client algo order id, this or algoId should be provided</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXRestClientUnifiedApiTrading.AmendAlgoOrderAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Nullable{OKX.Net.Enums.OXKTriggerPriceType},System.Threading.CancellationToken)">
            <summary>
            Amend an incomplete order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-post-amend-algo-order" /></para>
            </summary>
            <param name="symbol">Instrument ID</param>
            <param name="algoId">Algo ID</param>
            <param name="clientAlgoId">Client Algo Order ID</param>
            <param name="requestId">Request ID</param>
            <param name="cancelOnFail">Cancel On Fail</param>
            <param name="newQuantity">New Quantity</param>
            <param name="newTakeProfitTriggerPrice">New take profit trigger price</param>
            <param name="newStopLossTriggerPrice">New stop loss trigger price</param>
            <param name="newTakeProfitOrderPrice">New take profit order price</param>
            <param name="newStopLossOrderPrice">New stop loss order price</param>
            <param name="newTakeProfitPriceTriggerType">New take profit price trigger type</param>
            <param name="newStopLossPriceTriggerType">New stop loss price trigger type</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApi">
            <summary>
            Unified API
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApi.Account">
            <summary>
            Account streams and queries
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApi.ExchangeData">
            <summary>
            Exchange data streams and queries
            </summary>
        </member>
        <member name="P:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApi.Trading">
            <summary>
            Trading data and queries
            </summary>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiAccount">
            <summary>
            Unified API
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiAccount.SubscribeToAccountUpdatesAsync(System.String,System.Boolean,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Account.OKXAccountBalance}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account information updates. Data will be pushed when triggered by events such as placing/canceling order, and will also be pushed in regular interval according to subscription granularity.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-websocket-account-channel" /></para>
            </summary>
            <param name="asset">Only receive updates for this asset</param>
            <param name="regularUpdates">If true will send updates regularly even if nothing has changed. If false only send update on change</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiAccount.SubscribeToBalanceAndPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account balance and position information updates. Data will be pushed when triggered by events such as filled order, funding transfer.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-websocket-balance-and-position-channel" /></para>
            </summary>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiAccount.SubscribeToDepositUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Funding.OKXDepositHistory}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to deposit updates
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-websocket-deposit-info-channel" /></para>
            </summary>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiAccount.SubscribeToWithdrawalUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Funding.OKXWithdrawalHistory}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to withdrawal updates
            <para><a href="https://www.okx.com/docs-v5/en/#funding-account-websocket-withdrawal-info-channel" /></para>
            </summary>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData">
            <summary>
            Unified API
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToEstimatedPriceUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXEstimatedPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the estimated delivery/exercise price of FUTURES contracts and OPTION updates.
            Only the estimated delivery/exercise price will be pushed an hour before delivery/exercise, and will be pushed if there is any price change.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-estimated-delivery-exercise-price-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="instrumentFamily">Instrument family. Required if symbol is not set</param>
            <param name="symbol">Symbol. Required if instrumentFamily is not set</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToFundingRateUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXFundingRate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to funding rate updates. Data will be pushed every minute.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-funding-rate-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToIndexKlineUpdatesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXCandlestick}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the candlesticks data of the index updates. Data will be pushed every 500 ms.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-index-candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period">Period</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToIndexTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXIndexTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to index tickers data updates
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-index-tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToOpenInterestUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXOpenInterest}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the open interest updates. Data will by pushed every 3 seconds.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-open-interest-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXCandlestick}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the candlesticks data updates of a symbol. Data will be pushed every 500 ms.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-ws-candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period"></param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToMarkPriceUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXMarkPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the mark price updates. Data will be pushed every 200 ms when the mark price changes, and will be pushed every 10 seconds when the mark price does not change.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-mark-price-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToMarkPriceKlineUpdatesAsync(System.String,OKX.Net.Enums.OKXPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXCandlestick}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the candlesticks data updates of the mark price. Data will be pushed every 500 ms.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-mark-price-candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="period">Period</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToOptionSummaryUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{OKX.Net.Objects.Public.OKXOptionSummary}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to detailed pricing information updates of all OPTION contracts. Data will be pushed at once.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-option-summary-channel" /></para>
            </summary>
            <param name="instrumentFamily">Instrument family</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.String,OKX.Net.Enums.OKXOrderBookType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book data updates.
            Use books for 400 depth levels, book5 for 5 depth levels, books50-l2-tbt tick-by-tick 50 depth levels, and books-l2-tbt for tick-by-tick 400 depth levels.
            books: 400 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed every 100 ms when there is change in order book.
            books5: 5 depth levels will be pushed every time.Data will be pushed every 200 ms when there is change in order book.
            books50-l2-tbt: 50 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed tick by tick, i.e.whenever there is change in order book.
            books-l2-tbt: 400 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed tick by tick, i.e.whenever there is change in order book.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-ws-order-book-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="orderBookType">Order Book Type</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToPriceLimitUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Public.OKXLimitPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the maximum buy price and minimum sell price of the instrument updates. Data will be pushed every 5 seconds when there are changes in limits, and will not be pushed when there is no changes on limit.
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-price-limit-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToSymbolUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{OKX.Net.Objects.Public.OKXInstrument}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbols updates. The instruments will be pushed if there's any change to the instrument’s state (such as delivery of FUTURES, exercise of OPTION, listing of new contracts / trading pairs, trading suspension, etc.).
            <para><a href="https://www.okx.com/docs-v5/en/#public-data-websocket-instruments-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToSystemStatusUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.System.OKXStatus}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to status updates of system maintenance and push when the system maintenance status changes. First subscription: "Push the latest change data"; every time there is a state change, push the changed content
            <para><a href="https://www.okx.com/docs-v5/en/#status-ws-status-channel" /></para>
            </summary>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the last traded price updates, bid price, ask price and 24-hour trading volume of instruments. Data will be pushed every 100 ms.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-ws-tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiExchangeData.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Market.OKXTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to the recent trades data updates. Data will be pushed whenever there is a trade.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-market-data-ws-trades-channel" /></para>
            </summary>
            <param name="symbol">Symbols</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading">
            <summary>
            Unified API
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.SubscribeToAdvanceAlgoOrderUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Trade.OKXAlgoOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to advance algo orders (includes iceberg order and twap order) updates. Data will be pushed when first subscribed. Data will be pushed when triggered by events such as placing/canceling order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-ws-advance-algo-orders-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="algoId">Algo order id</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.SubscribeToAlgoOrderUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Trade.OKXAlgoOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to algo orders (includes trigger order, oco order, conditional order) updates. Data will not be pushed when first subscribed. Data will only be pushed when triggered by events such as placing/canceling order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-algo-trading-ws-algo-orders-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.SubscribeToOrderUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Trade.OKXOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order information updates. Data will not be pushed when first subscribed. Data will only be pushed when triggered by events such as placing/canceling order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-order-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Symbol</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.SubscribeToPositionUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.String,System.Boolean,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{OKX.Net.Objects.Account.OKXPosition}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position information updates. Initial snapshot will be pushed according to subscription granularity. Data will be pushed when triggered by events such as placing/canceling order, and will also be pushed in regular interval according to subscription granularity.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-websocket-positions-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument Type</param>
            <param name="symbol">Instrument ID</param>
            <param name="instrumentFamily">Instrument family</param>
            <param name="regularUpdates">If true will send updates regularly even if nothing has changed. If false only send update on change</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.SubscribeToLiquidationWarningUpdatesAsync(OKX.Net.Enums.OKXInstrumentType,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{OKX.Net.Objects.Account.OKXPosition}},System.Threading.CancellationToken)">
            <summary>
            This push channel is only used as a risk warning, and is not recommended as a risk judgment for strategic trading. In the case that the market is volatile, there may be the possibility that the position has been liquidated at the same time that this message is pushed. The warning is sent when a position is at risk of liquidation for isolated margin positions.The warning is sent when all the positions are at risk of liquidation for cross margin positions.
            <para><a href="https://www.okx.com/docs-v5/en/#trading-account-websocket-position-risk-warning" /></para>
            </summary>
            <param name="instrumentType">The instrument type</param>
            <param name="instrumentFamily">Optional instrument family</param>
            <param name="onData">On Data Handler</param>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.PlaceOrderAsync(System.String,OKX.Net.Enums.OKXOrderSide,OKX.Net.Enums.OKXOrderType,OKX.Net.Enums.OKXTradeMode,System.Decimal,System.Nullable{System.Decimal},System.Nullable{OKX.Net.Enums.OKXPositionSide},System.Nullable{OKX.Net.Enums.OKXQuickMarginType},System.Nullable{System.Int32},System.Nullable{OKX.Net.Enums.OKXSelfTradePreventionMode},System.String,System.Nullable{OKX.Net.Enums.OKXQuantityAsset},System.String,System.Nullable{System.Boolean})">
            <summary>
            Place a new order
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-place-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="tradeMode">Trade Mode</param>
            <param name="side">Order Side</param>
            <param name="positionSide">Position Side</param>
            <param name="type">Order Type</param>
            <param name="quantity">Quantity</param>
            <param name="price">Price</param>
            <param name="asset">Asset</param>
            <param name="clientOrderId">Client Order ID</param>
            <param name="reduceOnly">Whether to reduce position only or not, true false, the default is false.</param>
            <param name="quickMarginType">Quick margin type</param>
            <param name="selfTradePreventionId">Self trade prevention id</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="quantityAsset">Asset of the quantity when placing market order</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderPlaceRequest})">
            <summary>
            Place orders in a batch. Maximum 20 orders can be placed per request
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-place-multiple-orders" /></para>
            </summary>
            <param name="orders">The orders to place</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.CancelOrderAsync(System.String,System.String,System.String)">
            <summary>
            Cancel an incomplete order
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-cancel-order" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="orderId">Cancel by order id. This or clientOrderId should be provided</param>
            <param name="clientOrderId">Cancel by client order id. This or orderId should be provided</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.CancelMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderCancelRequest})">
            <summary>
            Cancel incomplete orders in batches. Maximum 20 orders can be canceled per request.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-cancel-multiple-orders" /></para>
            </summary>
            <param name="ordersToCancel">Orders to cancel</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.AmendOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Amend an incomplete order.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-amend-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="orderId">Amend by order id. This or clientOrderId should be provided</param>
            <param name="clientOrderId">Amend by client order id. This or orderId should be provided</param>
            <param name="requestId">Request id</param>
            <param name="newQuantity">New quantity</param>
            <param name="newPrice">New price</param>
            <returns></returns>
        </member>
        <member name="M:OKX.Net.Interfaces.Clients.UnifiedApi.IOKXSocketClientUnifiedApiTrading.AmendMultipleOrdersAsync(System.Collections.Generic.IEnumerable{OKX.Net.Objects.Trade.OKXOrderAmendRequest})">
            <summary>
            Amend incomplete orders in batches. Maximum 20 orders can be amended per request.
            <para><a href="https://www.okx.com/docs-v5/en/#order-book-trading-trade-ws-amend-multiple-orders" /></para>
            </summary>
            <param name="ordersToCancel">Orders to cancel</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Interfaces.IOKXOrderBookFactory">
            <summary>
            Order book factory
            </summary>
        </member>
        <member name="M:OKX.Net.Interfaces.IOKXOrderBookFactory.Create(System.String,System.Action{OKX.Net.Objects.Options.OKXOrderBookOptions})">
            <summary>
            Create a new order book
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountBalance">
            <summary>
            Account balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.TotalEquity">
            <summary>
            Total equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.IsolatedMarginEquity">
            <summary>
            Isolated margin equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.AdjustedEquity">
            <summary>
            Adjusted equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.OrderFrozen">
            <summary>
            Order frozen
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.InitialMarginRequirement">
            <summary>
            Initial margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.MaintenanceMarginRequirement">
            <summary>
            Maintenance margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.NotionalUsd">
            <summary>
            Notional usd
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalance.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountBalanceDetail">
            <summary>
            Balance details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.Equity">
            <summary>
            Equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.CashBalance">
            <summary>
            Cash balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.IsolatedMarginEquity">
            <summary>
            Isolated margin equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.AvailableEquity">
            <summary>
            Available equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.DiscountEquity">
            <summary>
            Discount equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.AvailableBalance">
            <summary>
            Avilable balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.FrozenBalance">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.OrderFrozen">
            <summary>
            Order frozen
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.Liabilities">
            <summary>
            Liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.UnrealizedProfitAndLossLiabilities">
            <summary>
            Unrealized profit and loss liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.IsolatedUnrealizedProfitAndLoss">
            <summary>
            Isolated unrealized profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.CrossLiabilities">
            <summary>
            Cross liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.IsolatedLiabilities">
            <summary>
            Isolated liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.Twap">
            <summary>
            Twap
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.MaximumLoan">
            <summary>
            Maximum loan
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.UsdEquity">
            <summary>
            Usd equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.StrategyEquity">
            <summary>
            Strategy equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.FixedBalance">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.SpotInUseAmount">
            <summary>
            Spot in use amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBalanceDetail.AssetUsdPrice">
            <summary>
            Price index usd of the asset
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountBill">
            <summary>
            Account bill info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Time">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.BillId">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.BalanceChange">
            <summary>
            Balance change
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.FromAccount">
            <summary>
            From account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.ToAccount">
            <summary>
            To account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Notes">
            <summary>
            Notes
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.ExecutionType">
            <summary>
            Marker or take
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.PositionBalance">
            <summary>
            Position balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.PositionBalanceChange">
            <summary>
            Position balance change
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.SubType">
            <summary>
            Sub type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountBill.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountConfiguration">
            <summary>
            Account config
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.AccountLevel">
            <summary>
            Account level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.AutoLoan">
            <summary>
            Auto loan
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.GreeksType">
            <summary>
            Greeks type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.LevelTemporary">
            <summary>
            Level temporary
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.ContractIsolatedMarginTradingMode">
            <summary>
            Contract isolated margin trading mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.MarginIsolatedMarginTradingMode">
            <summary>
            Margin isolated trading mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.LiquidationGear">
            <summary>
            Liquidation gear
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.SpotOffsetType">
            <summary>
            Spot offset type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.Label">
            <summary>
            API key note
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.RoleType">
            <summary>
            Account role
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.OpAuth">
            <summary>
            Optional trading activation status
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.KycLevel">
            <summary>
            KYC level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.Ip">
            <summary>
            IP addresses linked to the current API key
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.Permissions">
            <summary>
            Permissions of the current API key
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountConfiguration.MainUserId">
            <summary>
            Main user id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountGreeksType">
            <summary>
            Greeks type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountGreeksType.GreeksType">
            <summary>
            Greeks type
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountIsolatedMarginMode">
            <summary>
            Isolated margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountIsolatedMarginMode.PositionMode">
            <summary>
            Isolated margin mode
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountMode">
            <summary>
            Account mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountMode.Mode">
            <summary>
            Account mode
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXClosingPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.Type">
            <summary>
            Closing type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.OpenAveragePrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.CloseAveragePrice">
            <summary>
            Average closing price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.OpenMaxPos">
            <summary>
            Max open position
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.CloseTotalPos">
            <summary>
            Total close position
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.TriggerMarkPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.Underlying">
            <summary>
            Underlying
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXClosingPosition.PnlRatio">
            <summary>
            Profit and loss ratio
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXDustConvertResult">
            <summary>
            Dust conversion result
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXDustConvertResult.TotalConvertedQuantity">
            <summary>
            Total quantity of OKB after conversion
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXDustConvertResult.Assets">
            <summary>
            Details of asset conversion
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXDustConvertAsset">
            <summary>
            Dust conversion asset details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXDustConvertAsset.Quantity">
            <summary>
            Quantity of asset before conversion
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXDustConvertAsset.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXDustConvertAsset.ConvertQuantity">
            <summary>
            Quantity of OKB after conversion
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXDustConvertAsset.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXFeeRate">
            <summary>
            Fee rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.MakerUsdtMarginContracts">
            <summary>
            Maker fee rate of USDT-margined contracts
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.TakerUsdtMarginContracts">
            <summary>
            Taker fee rate of USDT-margined contracts
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.MakerFeeUsdc">
            <summary>
            Maker fee rate for the USDC trading pairs(SPOT/MARGIN) and contracts(FUTURES/SWAP)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.TakerFeeUsdc">
            <summary>
            Taker fee rate for the USDC trading pairs(SPOT/MARGIN) and contracts(FUTURES/SWAP)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXFeeRate.Exercise">
            <summary>
            Exercise
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXInterestAccrued">
            <summary>
            Interest accrued
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.Liabilities">
            <summary>
            Liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestAccrued.Type">
            <summary>
            Loan type
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXInterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestRate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXInterestRate.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXLeverage">
            <summary>
            Leverage info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXLeverage.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXLeverage.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXLeverage.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXLeverage.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXMarginAmount">
            <summary>
            Margin amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMarginAmount.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMarginAmount.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMarginAmount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMarginAmount.Leverage">
            <summary>
            Real leverage after the margin adjustment
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMarginAmount.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMarginAmount.MarginAddReduce">
            <summary>
            Margin add reduce
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXMaximumAmount">
            <summary>
            Maximum buy sell info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAmount.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAmount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAmount.MaximumBuy">
            <summary>
            Maximum buy
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAmount.MaximumSell">
            <summary>
            Maximum sell
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXMaximumAvailableAmount">
            <summary>
            Available amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAvailableAmount.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAvailableAmount.AvailableBuy">
            <summary>
            Available buy
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumAvailableAmount.AvailableSell">
            <summary>
            Available sell
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXMaximumLoanAmount">
            <summary>
            Maximum loan amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumLoanAmount.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumLoanAmount.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumLoanAmount.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumLoanAmount.MaximumLoan">
            <summary>
            Maximum loan
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumLoanAmount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXMaximumLoanAmount.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Time">
            <summary>
            pTime
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.PositionAsset">
            <summary>
            Position asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Liabilities">
            <summary>
            Liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.LiabilitiesAsset">
            <summary>
            Liabilities asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.InitialMarginRequirement">
            <summary>
            Initial margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.OptionValue">
            <summary>
            Option value
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.AutoDeleveragingIndicator">
            <summary>
            Auto deleveraging indicator
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.AvailablePositions">
            <summary>
            Available position
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.PositionsQuantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.UnrealizedProfitAndLossRatio">
            <summary>
            Unrealized profit and loss ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.NotionalUsd">
            <summary>
            Notional usd
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.MaintenanceMarginRequirement">
            <summary>
            Maintenance margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.DeltaBS">
            <summary>
            Delta BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.DeltaPA">
            <summary>
            Delta PA
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.GammaBS">
            <summary>
            Gamma BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.GammaPA">
            <summary>
            Gamma PA
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.ThetaBS">
            <summary>
            Theta BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.ThetaPA">
            <summary>
            Theta PA
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.VegaBS">
            <summary>
            Vega BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.VegaPA">
            <summary>
            Vega PA
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.IndexPrice">
            <summary>
            Latest underlying index price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.UsdPrice">
            <summary>
            Usd price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.MarkPrice">
            <summary>
            Latest mark price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.BaseBorrowed">
            <summary>
            Base asset amount already borrowed
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.BaseInterest">
            <summary>
            Base Interest, undeducted interest that has been incurred
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.QuoteBorrowed">
            <summary>
            Quote asset amount already borrowed
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.QuoteInterest">
            <summary>
            Quote Interest, undeducted interest that has been incurred
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.SpotInUseAmount">
            <summary>
            Spot in use amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.SpotInUseAsset">
            <summary>
            Spot in use asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.BusinessId">
            <summary>
            External business id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.BusinessType">
            <summary>
            External business type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.UnrealizedPnl">
            <summary>
            Unrealized profit and loss calculated by last price. Main usage is showing, actual value is upl.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.UnrealizedPnlRatio">
            <summary>
            Unrealized profit and loss ratio calculated by last price.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.BaseBalance">
            <summary>
            Base balance (Margin only)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.QuoteBalance">
            <summary>
            Quote balance (Margin only)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.Fee">
            <summary>
            Accumulated fee. Negative number represents the user transaction fee charged by the platform. Positive number represents rebate.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.FundingFee">
            <summary>
            Accumulated funding fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.LiquidationPenalty">
            <summary>
            Accumulated liquidation penalty. It is negative when there is a value.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPosition.CloseOrderAlgo">
            <summary>
            Close position algo orders attached to the position
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXPositionCloseOrder">
            <summary>
            Position close order info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionCloseOrder.AlgoId">
            <summary>
            Algo id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionCloseOrder.StopLossTriggerPrice">
            <summary>
            Stop losse trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionCloseOrder.StopLossTriggerType">
            <summary>
            Stop loss trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionCloseOrder.TakeProfitTriggerPrice">
            <summary>
            Take profit trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionCloseOrder.TakeProfitTriggerType">
            <summary>
            Take profit trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionCloseOrder.CloseFraction">
            <summary>
            Fraction of position to be closed when the algo order is triggered.
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate">
            <summary>
            Position and balance update
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate.EventType">
            <summary>
            Trigger event type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate.BalanceData">
            <summary>
            Balance data
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionAndBalanceUpdate.PositionData">
            <summary>
            Position data
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXBalanceUpdate">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXBalanceUpdate.CashBalance">
            <summary>
            Cash balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXBalanceUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountPositionUpdate">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.Quantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.PositionAsset">
            <summary>
            Position asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.TradeId">
            <summary>
            Last trade ID
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountPositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionMode.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXPositionRisk">
            <summary>
            Position risk info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionRisk.AdjustedEquity">
            <summary>
            Adjusted equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionRisk.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionRisk.BalanceData">
            <summary>
            Balance data
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXPositionRisk.PositionData">
            <summary>
            Position data
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountPositionRiskBalanceData">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskBalanceData.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskBalanceData.DiscountEquity">
            <summary>
            Discount equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskBalanceData.Equity">
            <summary>
            Equity
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.NotionalCcy">
            <summary>
            Notional currency
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.NotionalUsd">
            <summary>
            Notional usd
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.Quantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.PositionAsset">
            <summary>
            Position asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.BaseBalance">
            <summary>
            Base asset balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXAccountPositionRiskPositionData.QuoteBalance">
            <summary>
            Quote asset balance
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Account.OKXWithdrawalAmount">
            <summary>
            Withdrawal info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXWithdrawalAmount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXWithdrawalAmount.MaximumWithdrawal">
            <summary>
            Maximum withdrawal amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXWithdrawalAmount.MaximumWithdrawalIncl">
            <summary>
            Max withdrawal (including borrowed assets under Multi-currency margin/Portfolio margin)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXWithdrawalAmount.MaximumWithdrawalSpotOffset">
            <summary>
            Max withdrawal under Spot-Derivatives risk offset mode (excluding borrowed assets under Portfolio margin)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Account.OKXWithdrawalAmount.MaximumWithdrawalSpotOffsetIncl">
            <summary>
            Max withdrawal under Spot-Derivatives risk offset mode (including borrowed assets under Portfolio margin)
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Core.OKXRestApiError">
            <summary>
            API error
            </summary>
        </member>
        <member name="M:OKX.Net.Objects.Core.OKXRestApiError.#ctor(System.Nullable{System.Int32},System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="T:OKX.Net.Objects.Core.OKXRestApiResponse`1">
            <summary>
            Rest API response
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:OKX.Net.Objects.Core.OKXRestApiResponse`1.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Core.OKXRestApiResponse`1.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Core.OKXRestApiResponse`1.Data">
            <summary>
            Response data
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.AllowDeposit">
            <summary>
            Deposit allowed
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.AllowWithdrawal">
            <summary>
            Withdrawal allowed
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.AllowInternalTransfer">
            <summary>
            Can internal transfer
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MinimumWithdrawalAmount">
            <summary>
            Minimal withdrawal quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MinimumWithdrawalFee">
            <summary>
            Minimum withdrawal fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MaximumWithdrawalFee">
            <summary>
            Maximum withdrawal fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MaxDeposit">
            <summary>
            The fixed deposit limit, unit in USD
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MaxDepositLayer2">
            <summary>
            The layer2 network daily deposit limit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.LogoLink">
            <summary>
            Logo link
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.IsMainNet">
            <summary>
            Main net
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MaxWithdrawalFeeForContractAddress">
            <summary>
            The maximum withdrawal fee for contract address
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MinWithdrawalFeeForContractAddress">
            <summary>
            The minimum withdrawal fee for contract address
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MaxWithdrawal">
            <summary>
            The maximum withdrawal amount in a single transaction
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MinDeposit">
            <summary>
            The minimum deposit amount in a single transaction
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MinDepositConfirmations">
            <summary>
            The minimum number of blockchain confirmations to acknowledge fund deposit.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MinDepositConfirmationsWithdraw">
            <summary>
            The minimum number of blockchain confirmations required for withdrawal of a deposit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.NeedsTag">
            <summary>
            Whether tag/memo information is required for withdrawal
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.UsedDepositQuota">
            <summary>
            The used amount of fixed deposit quota, unit in USD
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.UsedWithdrawalQuota">
            <summary>
            The amount of currency withdrawal used in the past 24 hours, unit in USD
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.MaxWithdrawal24h">
            <summary>
            The withdrawal limit in the past 24 hours, unit in USD
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXAsset.WithdrawalTickSize">
            <summary>
            The withdrawal precision, indicating the number of digits after the decimal point.
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.DepositPaymentId">
            <summary>
            Payment id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Selected">
            <summary>
            Selected
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.ContractAddr">
            <summary>
            Contract address
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositAddress.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXDepositHistory">
            <summary>
            Deposit history
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.To">
            <summary>
            To
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.DepositId">
            <summary>
            Deposit id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.State">
            <summary>
            Deposit state
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.Confirmations">
            <summary>
            Actual amount of blockchain confirm in a single deposit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.AreaCodeFrom">
            <summary>
            If from is a phone number, this parameter return area code of the phone number
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXDepositHistory.FromWithdrawalId">
            <summary>
            Internal transfer initiator's withdrawal ID
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXFundingBalance">
            <summary>
            Funding balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBalance.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBalance.Frozen">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXFundingBill">
            <summary>
            Funding bill
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.BillId">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.BalanceChange">
            <summary>
            Balance change
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXFundingBill.ClientId">
            <summary>
            Client id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXLightningDeposit">
            <summary>
            Lightning deposit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXLightningDeposit.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXLightningDeposit.Invoice">
            <summary>
            Invoice
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXLightningWithdrawal">
            <summary>
            Lightning withdrawal
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXLightningWithdrawal.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXLightningWithdrawal.WithdrawalId">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXSavingActionResponse">
            <summary>
            Saving action info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingActionResponse.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingActionResponse.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingActionResponse.PurchaseRate">
            <summary>
            Rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingActionResponse.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXSavingBalance">
            <summary>
            Saving balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.Earnings">
            <summary>
            Earnings
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.RedemptingAmount">
            <summary>
            Redemption amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.LendingRate">
            <summary>
            Lending rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.LoanAmount">
            <summary>
            Loan amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXSavingBalance.PendingAmount">
            <summary>
            Pending amount
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXTransferInfo">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.From">
            <summary>
            From account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.To">
            <summary>
            To account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.ClientId">
            <summary>
            Client id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.Type">
            <summary>
            Type of transfer
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.SubAccountName">
            <summary>
            Name of the sub account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferInfo.Status">
            <summary>
            Type of transfer
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXTransferResponse">
            <summary>
            Transfer response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferResponse.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferResponse.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferResponse.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferResponse.From">
            <summary>
            From account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferResponse.To">
            <summary>
            To account
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXTransferResponse.ClientId">
            <summary>
            Client id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXWithdrawalHistory">
            <summary>
            Withdrawal history
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.WithdrawalId">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.To">
            <summary>
            To
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.ClientId">
            <summary>
            Client id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.AreaCodeFrom">
            <summary>
            Area code for the phone number
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalHistory.AreaCodeTo">
            <summary>
            Area code for the phone number
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXWithdrawalId">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalId.WithdrawalId">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Funding.OKXWithdrawalResponse">
            <summary>
            Withdrawal response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalResponse.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalResponse.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalResponse.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalResponse.WithdrawalId">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Funding.OKXWithdrawalResponse.ClientId">
            <summary>
            Client id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKX24HourVolume">
            <summary>
            24 hour volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKX24HourVolume.VolumeUsd">
            <summary>
            Usd volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKX24HourVolume.VolumeCny">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKX24HourVolume.Time">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXBlockTicker">
            <summary>
            Block ticker
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXBlockTicker.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXBlockTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXBlockTicker.Volume">
            <summary>
            Quote Volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXBlockTicker.BaseVolume">
            <summary>
            Base Volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXBlockTicker.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXCandlestick">
            <summary>
            Candlestick
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.HighPrice">
            <summary>
            Highest price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.LowPrice">
            <summary>
            Lowest price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.Volume">
            <summary>
            Trading volume, with a unit of contract.
            If it is a derivatives contract, the value is the number of contracts.
            If it is SPOT/MARGIN, the value is the quantity in base currency.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.VolumeCurrency">
            <summary>
            Trading volume, with a unit of currency.
            If it is a derivatives contract, the value is the number of base currency.
            If it is SPOT/MARGIN, the value is the quantity in quote currency.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.VolumeCurrencyQuote">
            <summary>
            Trading volume, the value is the quantity in quote currency
            e.g. The unit is USDT for BTC-USDT and BTC-USDT-SWAP;
            The unit is USD for BTC-USD-SWAP
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXCandlestick.Confirm">
            <summary>
            The state of candlesticks.
            false represents that it is uncompleted, true represents that it is completed.
            </summary>
        </member>
        <member name="M:OKX.Net.Objects.Market.OKXCandlestick.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXIndexComponents">
            <summary>
            Index info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponents.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponents.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponents.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponents.Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXIndexComponent">
            <summary>
            Index component
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponent.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponent.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponent.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponent.ConvertPrice">
            <summary>
            Convert price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexComponent.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXIndexTicker">
            <summary>
            Index ticker
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.OpenPriceUtc0">
            <summary>
            Open price UTC 0
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.OpenPriceUtc8">
            <summary>
            Open price UTC 8
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXIndexTicker.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXOracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOracle.Messages">
            <summary>
            Messages
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOracle.Signatures">
            <summary>
            Signatures
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOracle.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOracle.Prices">
            <summary>
            Prices
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.Checksum">
            <summary>
            Checksum
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.SequenceId">
            <summary>
            Update sequence id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBook.PreviousSequenceId">
            <summary>
            Previous sequence id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXOrderBookRow">
            <summary>
            Order book row
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBookRow.Price">
            <summary>
            The price for this row
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBookRow.Quantity">
            <summary>
            The quantity for this row
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBookRow.LiquidatedOrders">
            <summary>
            The number of liquidated orders at the price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXOrderBookRow.OrdersCount">
            <summary>
            The number of orders at the price
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXTicker">
            <summary>
            Ticker
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.LastQuantity">
            <summary>
            Last trade quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.BestAskSize">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.QuoteVolume">
            <summary>
            Quote Volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.Volume">
            <summary>
            Base Volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.OpenPriceUtc0">
            <summary>
            Open price UTC 0
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.OpenPriceUtc8">
            <summary>
            Open price UTC 8
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTicker.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Market.OKXTrade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Market.OKXTrade.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.OKXApiAddresses">
            <summary>
            Api addresses
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.OKXApiAddresses.UnifiedRestAddress">
            <summary>
            Base rest address
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.OKXApiAddresses.UnifiedSocketAddress">
            <summary>
            Base socket address
            </summary>
        </member>
        <member name="F:OKX.Net.Objects.OKXApiAddresses.Default">
            <summary>
            Default live addresses
            </summary>
        </member>
        <member name="F:OKX.Net.Objects.OKXApiAddresses.Demo">
            <summary>
            Demo addresses
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.OKXApiCredentials">
            <inheritdoc />
        </member>
        <member name="P:OKX.Net.Objects.OKXApiCredentials.PassPhrase">
            <summary>
            Passphrase
            </summary>
        </member>
        <member name="M:OKX.Net.Objects.OKXApiCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            ctor
            </summary>
            <param name="apiKey"></param>
            <param name="apiSecret"></param>
            <param name="apiPassPhrase"></param>
        </member>
        <member name="M:OKX.Net.Objects.OKXApiCredentials.Copy">
            <summary>
            Copy
            </summary>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.Objects.Options.OKXOrderBookOptions">
            <summary>
            Order book options
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXOrderBookOptions.Default">
            <summary>
            Default options for the OKX SymbolOrderBook
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXOrderBookOptions.Limit">
            <summary>
            The limit of entries in the order book
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Options.OKXRestOptions">
            <summary>
            Rest client options
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXRestOptions.Default">
            <summary>
            Default options for new OKXRestClients
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXRestOptions.SignPublicRequests">
            <summary>
            Whether or not to sign public requests
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXRestOptions.BrokerId">
            <summary>
            Broker ID for earning rebates
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXRestOptions.UnifiedOptions">
            <summary>
            Options for the  unified API
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Options.OKXSocketOptions">
            <summary>
            Socket client options
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXSocketOptions.Default">
            <summary>
            Default options for new OKXRestClients
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXSocketOptions.BrokerId">
            <summary>
            Broker ID for earning rebates
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Options.OKXSocketOptions.UnifiedOptions">
            <summary>
            Options for the Unified API
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXDeliveryExerciseHistory">
            <summary>
            Delivery exercise history
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXDeliveryExerciseHistory.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXDeliveryExerciseHistory.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPublicDeliveryExerciseHistoryDetail">
            <summary>
            Delivery exercise history details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicDeliveryExerciseHistoryDetail.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicDeliveryExerciseHistoryDetail.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicDeliveryExerciseHistoryDetail.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXDiscountInfo">
            <summary>
            Discount info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXDiscountInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXDiscountInfo.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXDiscountInfo.DiscountLevel">
            <summary>
            Discount level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXDiscountInfo.Details">
            <summary>
            Discount info
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPublicDiscountInfoDetail">
            <summary>
            Discount details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicDiscountInfoDetail.DiscountRate">
            <summary>
            Discount rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicDiscountInfoDetail.MaximumAmount">
            <summary>
            Max amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicDiscountInfoDetail.MinimumAmount">
            <summary>
            Min amount
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXEstimatedPrice">
            <summary>
            Estimated price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXEstimatedPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXEstimatedPrice.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXEstimatedPrice.EstimatedPrice">
            <summary>
            Estimated price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXEstimatedPrice.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRate.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRate.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRate.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRate.NextFundingRate">
            <summary>
            Next funding rate
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXFundingRateHistory">
            <summary>
            Funding rate history
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRateHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRateHistory.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRateHistory.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRateHistory.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXFundingRateHistory.RealizedRate">
            <summary>
            Realized rate
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXInstrument">
            <summary>
            Instrument
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.Symbol">
            <summary>
            Instrument ID, e.g. BTC-USD-SWAP
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.InstrumentFamily">
            <summary>
            Instrument family, e.g. BTC-USD. Only applicable to FUTURES/SWAP/OPTION
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.Underlying">
            <summary>
            Underlying, e.g. BTC-USD. Only applicable to FUTURES/SWAP/OPTION
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.SettlementAsset">
            <summary>
            settlement asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.ContractValue">
            <summary>
            Contract value
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.ContractMultiplier">
            <summary>
            Contract multiplier
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.ContractValueAsset">
            <summary>
            Contract value asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.OptionType">
            <summary>
            Option type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.StrikePrice">
            <summary>
            Strike price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.ListingTime">
            <summary>
            Listing time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.ExpiryTime">
            <summary>
            Expiry time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaximumLeverage">
            <summary>
            Maximum leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.TickSize">
            <summary>
            Tick size
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.LotSize">
            <summary>
            Lot size
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MinimumOrderSize">
            <summary>
            Minimum order size
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.Alias">
            <summary>
            Alias
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.state">
            <summary>
            State
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaxLimitQuantity">
            <summary>
            The maximum order quantity of the contract or spot limit order.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaxMarketQuantity">
            <summary>
            The maximum order quantity of the contract or spot market order.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaxTwapQuantity">
            <summary>
            The maximum order quantity of the contract or spot twap order.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaxIcebergQuantity">
            <summary>
            The maximum order quantity of the contract or spot iceBerg order.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaxTriggerQuantity">
            <summary>
            The maximum order quantity of the contract or spot trigger order.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInstrument.MaxStopQuantity">
            <summary>
            The maximum order quantity of the contract or spot stop market order.
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXInsuranceFund">
            <summary>
            Insurance fund
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFund.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFund.InstrumentFamily">
            <summary>
            Instrument family
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFund.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXInsuranceFundDetail">
            <summary>
            Fund details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFundDetail.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFundDetail.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFundDetail.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFundDetail.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInsuranceFundDetail.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXInterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInterestRate.Basic">
            <summary>
            Basic
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInterestRate.Vip">
            <summary>
            VIP
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXInterestRate.regular">
            <summary>
            Regular
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPublicInterestRateBasic">
            <summary>
            Basic interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateBasic.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateBasic.Quota">
            <summary>
            Quota
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateBasic.Rate">
            <summary>
            Rate
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPublicInterestRateVip">
            <summary>
            VIP interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateVip.InterestRateDiscount">
            <summary>
            Interest rate discount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateVip.LoanQuotaCoef">
            <summary>
            Loan quota coef
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateVip.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPublicInterestRateRegular">
            <summary>
            Regular interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateRegular.InterestRateDiscount">
            <summary>
            Interest rate discount
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateRegular.LoanQuotaCoef">
            <summary>
            Loan quota coef
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicInterestRateRegular.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXLimitPrice">
            <summary>
            Limit price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLimitPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLimitPrice.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLimitPrice.BuyLimit">
            <summary>
            Buy limit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLimitPrice.SellLimit">
            <summary>
            Sell limit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLimitPrice.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXLiquidationInfo">
            <summary>
            Liquidation info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLiquidationInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLiquidationInfo.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLiquidationInfo.TotalLoss">
            <summary>
            Total loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLiquidationInfo.Underlying">
            <summary>
            Underlying
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXLiquidationInfo.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail">
            <summary>
            Liquidation info details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.BankruptcyPrice">
            <summary>
            Bankruptcy price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.NumberOfLiquidations">
            <summary>
            Number of liquidations
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.NumberOfLosses">
            <summary>
            Number of losses
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPublicLiquidationInfoDetail.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXMarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXMarkPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXMarkPrice.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXMarkPrice.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXMarkPrice.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOpenInterest.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOpenInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOpenInterest.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOpenInterest.OpenInterestAsset">
            <summary>
            Open interest asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOpenInterest.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXOptionSummary">
            <summary>
            Option summary
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Underlying">
            <summary>
            Underlying
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Delta">
            <summary>
            Delta
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Gamma">
            <summary>
            Gamma
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Vega">
            <summary>
            Vega
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Theta">
            <summary>
            Theta
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.DeltaBS">
            <summary>
            Delta BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.GammaBS">
            <summary>
            Gamme BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.VegaBS">
            <summary>
            Vega BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.ThetaBS">
            <summary>
            Theta BS
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.MarkVolatility">
            <summary>
            Mark volatility
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.BidVolatility">
            <summary>
            Bit volatitlity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.AskVolatility">
            <summary>
            Ask volatility
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.RealVolatility">
            <summary>
            Real volatitlity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.ImpliedVolatility">
            <summary>
            Implied volatility of at-the-money options
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXOptionSummary.ForwardPrice">
            <summary>
            Forward price
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXPositionTier">
            <summary>
            Position tier
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.InstrumentFamily">
            <summary>
            Instrument family
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.Underlying">
            <summary>
            Underlying
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.Tier">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.MinimumSize">
            <summary>
            Minimum size
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.MaximumSize">
            <summary>
            Maximum size
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.MaintenanceMarginRequirement">
            <summary>
            Maintenance margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.InitialMarginRequirement">
            <summary>
            Initial margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.MaximumLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.OptionMarginCoefficient">
            <summary>
            Option margin coef
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.MaximumQuoteLoan">
            <summary>
            Maximum quote loan
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXPositionTier.MaximumBaseLoan">
            <summary>
            Maximum base loan
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXTime">
            <summary>
            Server time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXTime.Time">
            <summary>
            System time
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXUnitConvert">
            <summary>
            Unit conversion info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXUnitConvert.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXUnitConvert.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXUnitConvert.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXUnitConvert.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXUnitConvert.Unit">
            <summary>
            Unit
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXVipInterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXVipInterestRate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXVipInterestRate.Quota">
            <summary>
            Quota
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXVipInterestRate.Rate">
            <summary>
            Rate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXVipInterestRate.LevelList">
            <summary>
            Level list
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Public.OKXVipInterestRateLevel">
            <summary>
            Interest rate level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXVipInterestRateLevel.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Public.OKXVipInterestRateLevel.LoanQuota">
            <summary>
            Loan quota
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccount">
            <summary>
            Subaccount info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.Enable">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.GoogleAuth">
            <summary>
            Google auth enabled
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.SubAccountName">
            <summary>
            Subaccount name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.Mobile">
            <summary>
            Mobile
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.CanTransOut">
            <summary>
            Can transfer out
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccount.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey">
            <summary>
            Subaccount api key info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey.SubAccountName">
            <summary>
            Subaccount name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey.apiKey">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey.Permissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey.IpAddresses">
            <summary>
            IP addresses
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountApiKey.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountBill">
            <summary>
            Subaccount bill
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountBill.BillId">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountBill.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountBill.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountBill.Asset">
            <summary>
            asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountBill.SubAccountName">
            <summary>
            Subaccount name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountBill.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountFundingBalance">
            <summary>
            Sub account funding balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountFundingBalance.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountFundingBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountFundingBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountFundingBalance.FrozenBalance">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountName">
            <summary>
            Account name
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountName.SubAccountName">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance">
            <summary>
            Sub account trading balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.AdjustedEquity">
            <summary>
            Adjusted equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.InitialMarginRequirement">
            <summary>
            Initial margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.IsolatedMarginEquity">
            <summary>
            Isolated margin equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.MaintenanceMarginRequirement">
            <summary>
            Maintenance margin requirement
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.NotionalUsd">
            <summary>
            Notional usd
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.OrderFrozen">
            <summary>
            Order frozen
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.TotalEquity">
            <summary>
            Total equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalance.Details">
            <summary>
            Balance details
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail">
            <summary>
            Balance details
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.AvailableEquity">
            <summary>
            Available equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.CashBalance">
            <summary>
            Cash balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.CrossLiabilities">
            <summary>
            Cross liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.DiscountEquity">
            <summary>
            Discount equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.Equity">
            <summary>
            Equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.UsdEquity">
            <summary>
            Usd equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.FrozenBalance">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.IsolatedMarginEquity">
            <summary>
            Isolated margin equity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.IsolatedLiabilities">
            <summary>
            Isolated liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.Liabilities">
            <summary>
            Liabilities
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.MaximumLoan">
            <summary>
            Maximum loan
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.OrderFrozen">
            <summary>
            Order frozen
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.Twap">
            <summary>
            Twap
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTradingBalanceDetail.UnrealizedProfitAndLossLiabilities">
            <summary>
            Unrealized profit and loss liabilities
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.SubAccount.OKXSubAccountTransfer">
            <summary>
            Sub account transfer
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.SubAccount.OKXSubAccountTransfer.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.System.OKXStatus">
            <summary>
            Status info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Title">
            <summary>
            The title of system maintenance instructions
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Status">
            <summary>
            System maintenance status
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Begin">
            <summary>
            Begin time of system maintenance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.PreOpenBegin">
            <summary>
            The time of pre_open. Canceling orders, placing Post Only orders, and transferring funds to trading accounts are back after PreOpenBegin
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.End">
            <summary>
            End time of system maintenance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Link">
            <summary>
            Hyperlink for system maintenance details, if there is no return value, the default value will be empty. e.g. “”
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Product">
            <summary>
            Service type, 0：WebSocket ; 1：Spot/Margin ; 2：Futures ; 3：Perpetual ; 4：Options ; 5：Trading service
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.System">
            <summary>
            Service type, 0：WebSocket ; 1：Spot/Margin ; 2：Futures ; 3：Perpetual ; 4：Options ; 5：Trading service
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.RescheduledDescription">
            <summary>
            Rescheduled description，e.g. Rescheduled from 2021-01-26T16:30:00.000Z to 2021-01-28T16:30:00.000Z
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.MaintenanceType">
            <summary>
            Maintenance type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Environment">
            <summary>
            Environment. 1: Production Trading, 2: Demo Trading
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.System.OKXStatus.Timestamp">
            <summary>
            Push timestamp
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXAlgoOrder">
            <summary>
            Algo order info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.AlgoId">
            <summary>
            Algo order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.OrderIdList">
            <summary>
            Order id list
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TradeMode">
            <summary>
            Trade mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.ActualOrderPrice">
            <summary>
            Actual price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.ActualOrderQuantity">
            <summary>
            Actual quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.PriceLimit">
            <summary>
            Price limit
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.PriceRatio">
            <summary>
            Price ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.PriceVariance">
            <summary>
            Price variance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.StopLossOrderPrice">
            <summary>
            Stop loss order price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.StopLossTriggerPrice">
            <summary>
            Stop loss trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TakeProfitOrderPrice">
            <summary>
            Take profit order price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TakeProfitTriggerPrice">
            <summary>
            Take profit trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TriggerPrice">
            <summary>
            Trigger rpice
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.AverageQuantity">
            <summary>
            Average quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TimeInterval">
            <summary>
            Time interval
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.QuantityType">
            <summary>
            Quantity type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.ActualSide">
            <summary>
            Actual side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.CloseFraction">
            <summary>
            Fraction of position to be closed when the algo order is triggered
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TakeProfitTriggerPriceType">
            <summary>
            Take profit trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.StopLossTriggerPriceType">
            <summary>
            Stop loss trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.TriggerPriceType">
            <summary>
            Trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.CallbackRatio">
            <summary>
            Callback price ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.CallbackSpread">
            <summary>
            Callback price variance
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.ActivePrice">
            <summary>
            Active price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.MoveTriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.LastPrice">
            <summary>
            Last filled price while placing
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.FailCode">
            <summary>
            Failure code of the trigger order
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.AlgoClientOrderId">
            <summary>
            Client algo order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.QuickMarginType">
            <summary>
            Quick Margin type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrder.CostPriceSlEnabled">
            <summary>
            Whether to enable Cost-price SL. Only applicable to SL order of split TPs. false: disable, the default value, true: Enable “Cost-price SL”
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXAlgoOrderAmendResponse">
            <summary>
            Order amend response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderAmendResponse.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderAmendResponse.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderAmendResponse.RequestId">
            <summary>
            Request id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderAmendResponse.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderAmendResponse.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXAlgoOrderRequest">
            <summary>
            Algo order request
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderRequest.AlgoOrderId">
            <summary>
            Algo order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderRequest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXAlgoOrderResponse">
            <summary>
            Algo order response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderResponse.AlgoOrderId">
            <summary>
            Algo order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderResponse.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderResponse.AgloClientOrderId">
            <summary>
            Algo client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderResponse.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderResponse.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXAlgoOrderUpdate">
            <summary>
            Algo order update
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderUpdate.AmendResult">
            <summary>
            The result of amending the order. -1: failure, 0: success, 1: Automatic cancel(due to failed amendment)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderUpdate.AmendSource">
            <summary>
            Source of the order amendation. 1: Order amended by user, 2: Order amended by user, but the order quantity is overriden by system due to reduce-only, 3: New order placed by user, but the order quantity is overriden by system due to reduce-only, 4: Order amended by system due to other pending orders
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderUpdate.NotionalUsd">
            <summary>
            Estimated national value in USD of order
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderUpdate.RequestId">
            <summary>
            Client Request ID as assigned by the client for order amendment
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXAlgoOrderUpdate.AlgoOrderCount">
            <summary>
            Algo Order count, only applicable to iceberg order or twap order
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXClosePositionResponse">
            <summary>
            Close position response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXClosePositionResponse.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXClosePositionResponse.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXClosePositionResponse.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXClosePositionResponse.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.FillTime">
            <summary>
            Fill time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.PositionSide">
            <summary>
            Position type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.TradeMode">
            <summary>
            Trade mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.OrderState">
            <summary>
            Order state
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.QuantityType">
            <summary>
            Quantity type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.AccumulatedFillQuantity">
            <summary>
            Accumulated fill quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.QuantityFilled">
            <summary>
            Fill quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.TakeProfitTriggerPrice">
            <summary>
            Take profit trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.TakeProfitOrderPrice">
            <summary>
            Take profit order price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.StopLossTriggerPrice">
            <summary>
            Stop loss trigger price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.StopLossOrderPrice">
            <summary>
            Stop loss order price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.RebateAsset">
            <summary>
            Rebate asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.AttachAlgoCllientOrderId">
            <summary>
            Client-supplied Algo ID when plaing order attaching TP/SL.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.TakeProfitTriggerPriceType">
            <summary>
            Take profit trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.StopLossTriggerPriceType">
            <summary>
            Stop loss trigger price type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.SelfTradePreventionId">
            <summary>
            Self trade prevention ID
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.Source">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.CancelSource">
            <summary>
            Code of the cancellation source.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.CancelSourceReason">
            <summary>
            Reason of the cancellation source.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.AlgoClientOrderId">
            <summary>
            Client algo order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.AlgoId">
            <summary>
            Algo id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrder.QuickMarginType">
            <summary>
            Quick Margin type
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderAmendRequest">
            <summary>
            Order amend request
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.RequestId">
            <summary>
            Request id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.CancelOnFail">
            <summary>
            Cancel on fail
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.NewQuantity">
            <summary>
            New quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendRequest.NewPrice">
            <summary>
            New price
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderAmendResponse">
            <summary>
            Order amend response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendResponse.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendResponse.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendResponse.RequestId">
            <summary>
            Request id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendResponse.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderAmendResponse.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderCancelRequest">
            <summary>
            Cancel request
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelRequest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelRequest.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderCancelResponse">
            <summary>
            Cancel response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelResponse.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelResponse.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelResponse.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderCancelResponse.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderPlaceRequest">
            <summary>
            Order place request
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.TradeMode">
            <summary>
            Trade mode
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceRequest.QuantityType">
            <summary>
            Quantity type
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderPlaceResponse">
            <summary>
            Order placement response
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceResponse.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceResponse.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceResponse.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceResponse.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderPlaceResponse.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXOrderUpdate">
            <summary>
            Order info update
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.AmendResult">
            <summary>
            The result of amending the order. -1: failure, 0: success, 1: Automatic cancel(due to failed amendment)
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.AmendSource">
            <summary>
            Source of the order amendation. 1: Order amended by user, 2: Order amended by user, but the order quantity is overriden by system due to reduce-only, 3: New order placed by user, but the order quantity is overriden by system due to reduce-only, 4: Order amended by system due to other pending orders
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.ExecutionType">
            <summary>
            Liquidity taker or maker of the last filled, T: taker M: maker
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.FillFee">
            <summary>
            Last filled fee amount or rebate amount:
            Negative number represents the user transaction fee charged by the platform;
            Positive number represents rebate
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.FillFeeAsset">
            <summary>
            Last filled fee currency or rebate currency.
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.FillNotionalUsd">
            <summary>
            Filled notional value in USD of order
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.FillPnl">
            <summary>
            Last filled profit and loss
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.NotionalUsd">
            <summary>
            Estimated national value in USD of order
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXOrderUpdate.RequestId">
            <summary>
            Client Request ID as assigned by the client for order amendment
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trade.OKXTransaction">
            <summary>
            Transaction info
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.BillId">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.QuantityFilled">
            <summary>
            Fill quantity
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.FillIndexPrice">
            <summary>
            Index price at the moment of trade execution
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.FillProfitAndLoss">
            <summary>
            Last filled profit and loss, applicable to orders which have a trade and aim to close position
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.OrderFlowType">
            <summary>
            Order flow type
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.FillTime">
            <summary>
            Trade time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trade.OKXTransaction.Time">
            <summary>
            Data time
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXInterestVolume">
            <summary>
            Interest volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolume.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolume.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolume.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry">
            <summary>
            Interest volume expiry
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry.ExpiryTime">
            <summary>
            Expiry time
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry.CallOpenInterest">
            <summary>
            Call open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry.PutOpenInterest">
            <summary>
            Put open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry.CallVolume">
            <summary>
            Call volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeExpiry.PutVolume">
            <summary>
            Put volume
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXInterestVolumeStrike">
            <summary>
            Interest volume strike
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeStrike.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeStrike.Strike">
            <summary>
            Strike
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeStrike.CallOpenInterest">
            <summary>
            Call open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeStrike.PutOpenInterest">
            <summary>
            Put open interest
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeStrike.CallVolume">
            <summary>
            Call volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXInterestVolumeStrike.PutVolume">
            <summary>
            Put volume
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXPutCallRatio">
            <summary>
            Put/Call ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXPutCallRatio.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXPutCallRatio.OpenInterestRatio">
            <summary>
            Open interest ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXPutCallRatio.VolumeRatio">
            <summary>
            Volume ratio
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXRatio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXRatio.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXRatio.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXSupportCoins">
            <summary>
            Supported coins
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXSupportCoins.Contract">
            <summary>
            Contracts
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXSupportCoins.Option">
            <summary>
            Options
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXSupportCoins.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXTakerFlow">
            <summary>
            Take flow
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.CallOptionBuyVolume">
            <summary>
            Call option buy volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.CallOptionSellVolume">
            <summary>
            Call option sell volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.PutOptionBuyVolume">
            <summary>
            Put option buy volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.PutOptionSellVolume">
            <summary>
            Put option sell volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.CallBlockVolume">
            <summary>
            Call block volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerFlow.PutBlockVolume">
            <summary>
            Put block volume
            </summary>
        </member>
        <member name="T:OKX.Net.Objects.Trading.OKXTakerVolume">
            <summary>
            Taker volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerVolume.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerVolume.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerVolume.SellVolume">
            <summary>
            Sell volume
            </summary>
        </member>
        <member name="P:OKX.Net.Objects.Trading.OKXTakerVolume.BuyVolume">
            <summary>
            Buy volume
            </summary>
        </member>
        <member name="T:OKX.Net.OKXEnvironment">
            <summary>
            OKX environments
            </summary>
        </member>
        <member name="P:OKX.Net.OKXEnvironment.RestAddress">
            <summary>
            Rest API base address
            </summary>
        </member>
        <member name="P:OKX.Net.OKXEnvironment.SocketAddress">
            <summary>
            Socket API base address
            </summary>
        </member>
        <member name="P:OKX.Net.OKXEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="P:OKX.Net.OKXEnvironment.Demo">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:OKX.Net.OKXEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="restAddress"></param>
            <param name="socketAddress"></param>
            <returns></returns>
        </member>
        <member name="T:OKX.Net.SymbolOrderBooks.OKXOrderBookFactory">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXOrderBookFactory.Create(System.String,System.Action{OKX.Net.Objects.Options.OKXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook.#ctor(System.String,System.Action{OKX.Net.Objects.Options.OKXOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook.#ctor(System.String,System.Action{OKX.Net.Objects.Options.OKXOrderBookOptions},Microsoft.Extensions.Logging.ILogger{OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook},OKX.Net.Interfaces.Clients.IOKXSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OKX.Net.SymbolOrderBooks.OKXSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.OKX(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the OKX REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.OKX(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the OKX Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddOKX(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{OKX.Net.Objects.Options.OKXRestOptions},System.Action{OKX.Net.Objects.Options.OKXSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IOKXClient and IOKXSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IOKXSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
